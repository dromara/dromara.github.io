import{_ as n,o as s,c as a,f as t}from"./app-73779642.js";const p={},e=t(`<h1 id="http-用户接入-soul-网关注册逻辑分析" tabindex="-1"><a class="header-anchor" href="#http-用户接入-soul-网关注册逻辑分析" aria-hidden="true">#</a> HTTP 用户接入 Soul 网关注册逻辑分析</h1><h2 id="_1-注册入口" tabindex="-1"><a class="header-anchor" href="#_1-注册入口" aria-hidden="true">#</a> 1. 注册入口</h2><p>HTTP 用户接入 Soul 网关时，会调用 soul-admin 一个接口，把需要 Soul 网关管理的接口注册，今天就具体看看到底干了点儿啥。</p><p>先看下调用的接口信息如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SpringMvcClientBeanPostProcessor.java</span>
<span class="token doc-comment comment">/**
 * Instantiates a new Soul client bean post processor.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">soulSpringMvcConfig</span> the soul spring mvc config
 */</span>
<span class="token keyword">public</span> <span class="token class-name">SpringMvcClientBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SoulSpringMvcConfig</span> soulSpringMvcConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ValidateUtils</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>soulSpringMvcConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>soulSpringMvcConfig <span class="token operator">=</span> soulSpringMvcConfig<span class="token punctuation">;</span>
    url <span class="token operator">=</span> soulSpringMvcConfig<span class="token punctuation">.</span><span class="token function">getAdminUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/soul-client/springmvc-register&quot;</span><span class="token punctuation">;</span>
    executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-springmvc-register-接口逻辑" tabindex="-1"><a class="header-anchor" href="#_2-springmvc-register-接口逻辑" aria-hidden="true">#</a> 2. springmvc-register 接口逻辑</h2><p>全局搜索 &quot;springmvc-register&quot;，找到 soul-admin 模块下的 SoulClientController，看到这里，对于经常写 CRUD 的我们是不是很熟悉？哈哈~</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientController.java</span>
<span class="token doc-comment comment">/**
 * Register spring mvc string.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">springMvcRegisterDTO</span> the spring mvc register dto
 * <span class="token keyword">@return</span> the string
 */</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/springmvc-register&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">registerSpringMvc</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> springMvcRegisterDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> soulClientRegisterService<span class="token punctuation">.</span><span class="token function">registerSpringMvc</span><span class="token punctuation">(</span>springMvcRegisterDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Service 层实现类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Transactional</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">registerSpringMvc</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">isRegisterMetaData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MetaDataDO</span> exist <span class="token operator">=</span> metaDataMapper<span class="token punctuation">.</span><span class="token function">findByPath</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>exist<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">saveSpringMvcMetaData</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">String</span> selectorId <span class="token operator">=</span> <span class="token function">handlerSpringMvcSelector</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">handlerSpringMvcRule</span><span class="token punctuation">(</span>selectorId<span class="token punctuation">,</span> dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">SoulResultMessage</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dto.isRegisterMetaData() 这个是否注册元数据信息的判断，不知道什么时候用，存疑 //TODO，先往下走。</p><h3 id="_2-1-先看看这个方法-handlerspringmvcselector-处理-selector。" tabindex="-1"><a class="header-anchor" href="#_2-1-先看看这个方法-handlerspringmvcselector-处理-selector。" aria-hidden="true">#</a> 2.1 先看看这个方法 handlerSpringMvcSelector，处理 Selector。</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">handlerSpringMvcSelector</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> contextPath <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 根据 contextPath 到数据库里查询，是否已经注册过。</span>
    <span class="token class-name">SelectorDO</span> selectorDO <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> selectorId<span class="token punctuation">;</span>
    <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 还没有注册过</span>
        selectorId <span class="token operator">=</span> <span class="token function">registerSelector</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getRpcType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getAppName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 已经注册过，业务系统重启了会到这里</span>
        selectorId <span class="token operator">=</span> selectorDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//update upstream</span>
        <span class="token class-name">String</span> handle <span class="token operator">=</span> selectorDO<span class="token punctuation">.</span><span class="token function">getHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> handleAdd<span class="token punctuation">;</span>
        <span class="token class-name">DivideUpstream</span> addDivideUpstream <span class="token operator">=</span> <span class="token function">buildDivideUpstream</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">buildByName</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            handleAdd <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DivideUpstream</span><span class="token punctuation">&gt;</span></span> exist <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromList</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> <span class="token class-name">DivideUpstream</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">DivideUpstream</span> upstream <span class="token operator">:</span> exist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>upstream<span class="token punctuation">.</span><span class="token function">getUpstreamUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">.</span><span class="token function">getUpstreamUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> selectorId<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            exist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            handleAdd <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>exist<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        selectorDO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handleAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorData<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handleAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// update db</span>
        selectorMapper<span class="token punctuation">.</span><span class="token function">updateSelective</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// submit upstreamCheck</span>
        upstreamCheckService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// publish change event.</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> <span class="token class-name">DataEventTypeEnum</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">,</span>
                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> selectorId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-1-第一次接入-soul-网关" tabindex="-1"><a class="header-anchor" href="#_2-1-1-第一次接入-soul-网关" aria-hidden="true">#</a> 2.1.1 第一次接入 Soul 网关</h4><p>新接入的，到数据库里肯定查不到 selectorDO，进入 registerSelector 方法，仔细看看到底往哪些数据库表中插数据了。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">registerSelector</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> contextPath<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> rpcType<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> appName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SelectorDTO</span> selectorDTO <span class="token operator">=</span> <span class="token class-name">SelectorDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token class-name">SelectorTypeEnum</span><span class="token punctuation">.</span><span class="token constant">CUSTOM_FLOW</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">matchMode</span><span class="token punctuation">(</span><span class="token class-name">MatchModeEnum</span><span class="token punctuation">.</span><span class="token constant">AND</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">enabled</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">loged</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">continued</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">DUBBO</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">DUBBO</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SPRING_CLOUD</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">SPRING_CLOUD</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span><span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token function">buildSpringCloudSelectorHandle</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SOFA</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">SOFA</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">TARS</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">TARS</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//is divide</span>
        <span class="token class-name">DivideUpstream</span> divideUpstream <span class="token operator">=</span> <span class="token function">buildDivideUpstream</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> handler <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>divideUpstream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">DIVIDE</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        upstreamCheckService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>selectorDTO<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> divideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">SelectorConditionDTO</span> selectorConditionDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SelectorConditionDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setParamType</span><span class="token punctuation">(</span><span class="token class-name">ParamTypeEnum</span><span class="token punctuation">.</span><span class="token constant">URI</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setParamName</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setOperator</span><span class="token punctuation">(</span><span class="token class-name">OperatorEnum</span><span class="token punctuation">.</span><span class="token constant">MATCH</span><span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setParamValue</span><span class="token punctuation">(</span>contextPath <span class="token operator">+</span> <span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorDTO<span class="token punctuation">.</span><span class="token function">setSelectorConditions</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>selectorConditionDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> selectorService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selectorDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看到这么多 if else，是不是很兴奋，小伙伴们可以想想怎么优化掉这么多 if else，PR 搞起来 ^ - ^。</p><p>写了这么多，无非是封装 SelectorDTO 对象，最后调用 selectorService.register(selectorDTO) 入库，继续跟进去。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SelectorServiceImpl.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SelectorDTO</span> selectorDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SelectorDO</span> selectorDO <span class="token operator">=</span> <span class="token class-name">SelectorDO</span><span class="token punctuation">.</span><span class="token function">buildSelectorDO</span><span class="token punctuation">(</span>selectorDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectorConditionDTO</span><span class="token punctuation">&gt;</span></span> selectorConditionDTOs <span class="token operator">=</span> selectorDTO<span class="token punctuation">.</span><span class="token function">getSelectorConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>selectorDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorConditionDTOs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>selectorConditionDTO <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setSelectorId</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 这里在 for 循环里调用 dao 层插入数据，是不是可以考虑挪出去一次性批量插入？</span>
            selectorConditionMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span><span class="token class-name">SelectorConditionDO</span>
                    <span class="token punctuation">.</span><span class="token function">buildSelectorConditionDO</span><span class="token punctuation">(</span>selectorConditionDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">publishEvent</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">,</span> selectorConditionDTOs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> selectorDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看到这里有 2 条入库方法，分别向 selector 和 selector_condition 表中插入了数据。这里我们先不具体追究表结构及业务意义，后面补上。</p><p>publishEvent 方法，涉及到 ApplicationEventPublisher 接口，是观察者模式的一个实现，发布事件后通过监听器完成后续操作，这里先按下不表，后续单写一篇文章分析。</p><h4 id="_2-1-2-已经接入-soul-网关" tabindex="-1"><a class="header-anchor" href="#_2-1-2-已经接入-soul-网关" aria-hidden="true">#</a> 2.1.2 已经接入 Soul 网关</h4><p>就跟盗梦空间似的，我们回退 2 层梦境，回到插入数据的另一个分支，可以想见，就是，已经接入过 Soul 网关的系统重启，或新节点启动走的逻辑。</p><p>把前面的代码再贴过来：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">handlerSpringMvcSelector</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> contextPath <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 根据 contextPath 到数据库里查询，是否已经注册过。</span>
    <span class="token class-name">SelectorDO</span> selectorDO <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> selectorId<span class="token punctuation">;</span>
    <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 还没有注册过</span>
        selectorId <span class="token operator">=</span> <span class="token function">registerSelector</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getRpcType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getAppName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 已接入的业务系统重启，或新节点启动，会到这里</span>
        selectorId <span class="token operator">=</span> selectorDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//update upstream</span>
        <span class="token comment">// handle 字段存储这个接口真实节点信息，可能存在多台机器需要负载均衡的场景</span>
        <span class="token class-name">String</span> handle <span class="token operator">=</span> selectorDO<span class="token punctuation">.</span><span class="token function">getHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> handleAdd<span class="token punctuation">;</span>
        <span class="token class-name">DivideUpstream</span> addDivideUpstream <span class="token operator">=</span> <span class="token function">buildDivideUpstream</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">buildByName</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 这个接口虽然之前注册过，但第1个服务器节点接入 Soul 时会进来</span>
            handleAdd <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果已经至少有1个服务器节点已接入，会进到这里，判断是否是同一个节点（使用 upstreamUrl 区分），如果相同直接返回</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DivideUpstream</span><span class="token punctuation">&gt;</span></span> exist <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromList</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> <span class="token class-name">DivideUpstream</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">DivideUpstream</span> upstream <span class="token operator">:</span> exist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>upstream<span class="token punctuation">.</span><span class="token function">getUpstreamUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">.</span><span class="token function">getUpstreamUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> selectorId<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 如果不是同一个节点，把新节点加入到 handle 字段中</span>
            exist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            handleAdd <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>exist<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        selectorDO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handleAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorData<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handleAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// update db 更新数据库</span>
        selectorMapper<span class="token punctuation">.</span><span class="token function">updateSelective</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// submit upstreamCheck</span>
        upstreamCheckService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// publish change event.</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> <span class="token class-name">DataEventTypeEnum</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">,</span>
                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> selectorId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为还没有研究数据库表结构设计，根据已知部分猜测，1 个 selector 对应一个 divide 插件，这个插件以 contextPath 为标识（在这里就是 &quot;/http&quot;），一个 contextPath 可以部署多个服务器节点，这些节点信息已 json 形式保存在 handle 字段中。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// handle/handleAdd 数据格式</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;upstreamHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;upstreamUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10.0.0.12:8188&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;warmup&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面紧接着就是更新数据库 updateSelective。</p><p>upstreamCheckService.submit(contextPath, addDivideUpstream); 把真实服务器节点信息缓存在一个 Map(UPSTREAM_MAP) 里，有定时任务定期探活，如果发现服务节点宕机了，就把他剔除出去，防止把请求发送到已经宕机的节点上。</p><p>然后就是 eventPublisher.publishEvent()，跟前面的 publishEvent 方法一样，发布事件后通过监听器完成后续操作（简单介绍下，这里是通过与 Soul 网关建立的 websocket 长连接发送数据 SelectorData 修改的消息，Soul 网关根据消息修改数据，这个具体改的什么数据，怎么修改的，后面分析）。</p><p>到这里终于把 handlerSpringMvcSelector 这个方法分析完了。</p><h3 id="_2-2-再来看看这个方法-handlerspringmvcrule-处理-rule。" tabindex="-1"><a class="header-anchor" href="#_2-2-再来看看这个方法-handlerspringmvcrule-处理-rule。" aria-hidden="true">#</a> 2.2 再来看看这个方法 handlerSpringMvcRule，处理 Rule。</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handlerSpringMvcRule</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> selectorId<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RuleDO</span> ruleDO <span class="token operator">=</span> ruleMapper<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getRuleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>ruleDO<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">registerRule</span><span class="token punctuation">(</span>selectorId<span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getRpcType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getRuleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先拿着规则名字，到 rule 表里捞数据，如果捞到了表名已经注册过了，无操作。</p><p>看下数据库数据，就是业务系统下的接口地址。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> use soul<span class="token punctuation">;</span>
Database changed

mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> * from rule where name <span class="token operator">=</span> <span class="token string">&#39;/http/order/findById&#39;</span> <span class="token punctuation">\\</span>G
*************************** <span class="token number">1</span>. row ***************************
          id: <span class="token number">1349650371868782592</span>
 selector_id: <span class="token number">1349650371302551552</span>
  match_mode: <span class="token number">0</span>
        name: /http/order/findById
     enabled: <span class="token number">1</span>
       loged: <span class="token number">1</span>
        sort: <span class="token number">1</span>
      handle: <span class="token punctuation">{</span><span class="token string">&quot;loadBalance&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;random&quot;</span>,<span class="token string">&quot;retry&quot;</span>:0,<span class="token string">&quot;timeout&quot;</span>:3000<span class="token punctuation">}</span>
date_created: <span class="token number">2021</span>-01-14 <span class="token number">17</span>:31:39
date_updated: <span class="token number">2021</span>-01-14 <span class="token number">17</span>:31:39
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没捞到数据，注册这个规则。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">registerRule</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> selectorId<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> rpcType<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> ruleName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RuleHandle</span> ruleHandle <span class="token operator">=</span> <span class="token class-name">RuleHandleFactory</span><span class="token punctuation">.</span><span class="token function">ruleHandle</span><span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token function">acquireByName</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RuleDTO</span> ruleDTO <span class="token operator">=</span> <span class="token class-name">RuleDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">selectorId</span><span class="token punctuation">(</span>selectorId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span>ruleName<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">matchMode</span><span class="token punctuation">(</span><span class="token class-name">MatchModeEnum</span><span class="token punctuation">.</span><span class="token constant">AND</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">enabled</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">loged</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>ruleHandle<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RuleConditionDTO</span> ruleConditionDTO <span class="token operator">=</span> <span class="token class-name">RuleConditionDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">paramType</span><span class="token punctuation">(</span><span class="token class-name">ParamTypeEnum</span><span class="token punctuation">.</span><span class="token constant">URI</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">paramName</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">paramValue</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ruleConditionDTO<span class="token punctuation">.</span><span class="token function">setOperator</span><span class="token punctuation">(</span><span class="token class-name">OperatorEnum</span><span class="token punctuation">.</span><span class="token constant">MATCH</span><span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        ruleConditionDTO<span class="token punctuation">.</span><span class="token function">setOperator</span><span class="token punctuation">(</span><span class="token class-name">OperatorEnum</span><span class="token punctuation">.</span><span class="token constant">EQ</span><span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ruleDTO<span class="token punctuation">.</span><span class="token function">setRuleConditions</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>ruleConditionDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ruleService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ruleDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第 1 行，根据 rpcType(&quot;http&quot;) 获取其对应的 RuleHandle，这里，默认内置 3 种类型，我们这里的是 HTTP，对应 DivideRuleHandle。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// RuleHandleFactory.java</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">RuleHandleFactory</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * The RpcType to RuleHandle class map.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">RuleHandle</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The default RuleHandle.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">RuleHandle</span><span class="token punctuation">&gt;</span></span> <span class="token constant">DEFAULT_RULE_HANDLE</span> <span class="token operator">=</span> <span class="token class-name">SpringCloudRuleHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">HTTP</span><span class="token punctuation">,</span> <span class="token class-name">DivideRuleHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">DUBBO</span><span class="token punctuation">,</span> <span class="token class-name">DubboRuleHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SOFA</span><span class="token punctuation">,</span> <span class="token class-name">SofaRuleHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Get a RuleHandle object with given rpc type and path.
     * <span class="token keyword">@param</span> <span class="token parameter">rpcType</span>   rpc type.
     * <span class="token keyword">@param</span> <span class="token parameter">path</span>      path.
     * <span class="token keyword">@return</span>          RuleHandle object.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">RuleHandle</span> <span class="token function">ruleHandle</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">RpcTypeEnum</span> rpcType<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">RuleHandle</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span><span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">,</span> <span class="token constant">DEFAULT_RULE_HANDLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createDefault</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationException</span> <span class="token operator">|</span> <span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SoulException</span><span class="token punctuation">(</span>
                    <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Init RuleHandle failed with rpc type: %s, rule class: %s, exception: %s&quot;</span><span class="token punctuation">,</span>
                            rpcType<span class="token punctuation">,</span>
                            clazz<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面构造 RuleDTO 对象，注册规则。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// RuleServiceImpl.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">RuleDTO</span> ruleDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RuleDO</span> ruleDO <span class="token operator">=</span> <span class="token class-name">RuleDO</span><span class="token punctuation">.</span><span class="token function">buildRuleDO</span><span class="token punctuation">(</span>ruleDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleConditionDTO</span><span class="token punctuation">&gt;</span></span> ruleConditions <span class="token operator">=</span> ruleDTO<span class="token punctuation">.</span><span class="token function">getRuleConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ruleDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ruleMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>ruleDO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ruleConditions<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>ruleConditionDTO <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            ruleConditionDTO<span class="token punctuation">.</span><span class="token function">setRuleId</span><span class="token punctuation">(</span>ruleDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 这里在 for 循环里调用 dao 层插入数据，是不是可以考虑挪出去一次性批量插入？</span>
            ruleConditionMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span><span class="token class-name">RuleConditionDO</span>
                    <span class="token punctuation">.</span><span class="token function">buildRuleConditionDO</span><span class="token punctuation">(</span>ruleConditionDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">publishEvent</span><span class="token punctuation">(</span>ruleDO<span class="token punctuation">,</span> ruleConditions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ruleDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分别向 rule 和 rule_condition 表中插入数据。</p><p>publishEvent() 方法，通过 websocket 长连接，向 Soul 网关发送 RuleData 数据。</p><h2 id="_3-总结" tabindex="-1"><a class="header-anchor" href="#_3-总结" aria-hidden="true">#</a> 3.总结</h2><p>到这里，调用 &quot;/soul-client/springmvc-register&quot; 接口逻辑分析完了，我们总结下：</p><ul><li>处理 selector <ul><li>新增或修改 selector、selector_condition 表数据，持久化到 MySQL。</li><li>通过 websocket 向 Soul 网关发送数据改动信息。</li></ul></li><li>处理 rule <ul><li>新增或修改 rule、rule_condition 表数据，持久化到 MySQL。</li><li>通过 websocket 向 Soul 网关发送数据改动信息。</li></ul></li></ul><p>其中表结构及字段含义还需进一步学习和研究，websocket 发送给 Soul 网关后，网关做了什么处理也需要后续分析。</p><p>到这里，HTTP 用户接入 Soul 网关注册逻辑就分析完了。</p><p>如果在工作中你有使用网关的需求，或是个人有学习网关的追求，欢迎来跟我一起分析和学习，Soul 网关，你值得拥有。</p>`,50),c=[e];function o(l,u){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","soul_source_learning_02_http_client_register.html.vue"]]);export{k as default};
