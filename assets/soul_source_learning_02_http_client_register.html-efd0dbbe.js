import{_ as n,o as s,c as a,f as t}from"./app-9de9b782.js";const p={},e=t(`<h1 id="logic-analysis-of-http-user-accessing-to-soul-gateway" tabindex="-1"><a class="header-anchor" href="#logic-analysis-of-http-user-accessing-to-soul-gateway" aria-hidden="true">#</a> Logic Analysis of HTTP User Accessing to Soul Gateway</h1><h2 id="_1-registration-portal" tabindex="-1"><a class="header-anchor" href="#_1-registration-portal" aria-hidden="true">#</a> 1. Registration portal</h2><p>When the HTTP user accesses the Soul Gateway, it will call the soul-admin interface to register the interface that needs to be managed by the Soul Gateway. Let&#39;s see what we have done today.</p><p>First look at the interface information called as follows:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SpringMvcClientBeanPostProcessor.java</span>
<span class="token doc-comment comment">/**
 * Instantiates a new Soul client bean post processor.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">soulSpringMvcConfig</span> the soul spring mvc config
 */</span>
<span class="token keyword">public</span> <span class="token class-name">SpringMvcClientBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SoulSpringMvcConfig</span> soulSpringMvcConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ValidateUtils</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>soulSpringMvcConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>soulSpringMvcConfig <span class="token operator">=</span> soulSpringMvcConfig<span class="token punctuation">;</span>
    url <span class="token operator">=</span> soulSpringMvcConfig<span class="token punctuation">.</span><span class="token function">getAdminUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/soul-client/springmvc-register&quot;</span><span class="token punctuation">;</span>
    executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-spring-mvc-register-interface-logic" tabindex="-1"><a class="header-anchor" href="#_2-spring-mvc-register-interface-logic" aria-hidden="true">#</a> 2. Spring mvc-register interface logic</h2><p>Search &quot;springmvc-register&quot; globally and find the SoulClientController under the soul-admin module. See here. Are we familiar with those who often write CRUD? Ha-ha</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientController.java</span>
<span class="token doc-comment comment">/**
 * Register spring mvc string.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">springMvcRegisterDTO</span> the spring mvc register dto
 * <span class="token keyword">@return</span> the string
 */</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/springmvc-register&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">registerSpringMvc</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> springMvcRegisterDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> soulClientRegisterService<span class="token punctuation">.</span><span class="token function">registerSpringMvc</span><span class="token punctuation">(</span>springMvcRegisterDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Service layer implementation class:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Transactional</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">registerSpringMvc</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">isRegisterMetaData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MetaDataDO</span> exist <span class="token operator">=</span> metaDataMapper<span class="token punctuation">.</span><span class="token function">findByPath</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>exist<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">saveSpringMvcMetaData</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">String</span> selectorId <span class="token operator">=</span> <span class="token function">handlerSpringMvcSelector</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">handlerSpringMvcRule</span><span class="token punctuation">(</span>selectorId<span class="token punctuation">,</span> dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">SoulResultMessage</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Dto. IsRegister MetaData () is used to determine whether to register metadata information. I don&#39;t know when to use it, and I have doubts.//TODO, go down first.</p><h3 id="_2-1-take-a-look-at-the-method-handlerspringmvcselector-to-handle-the-selector" tabindex="-1"><a class="header-anchor" href="#_2-1-take-a-look-at-the-method-handlerspringmvcselector-to-handle-the-selector" aria-hidden="true">#</a> 2.1 Take a look at the method handlerSpringMvcSelector to handle the Selector.</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">handlerSpringMvcSelector</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> contextPath <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 根据 contextPath 到数据库里查询，是否已经注册过。</span>
    <span class="token class-name">SelectorDO</span> selectorDO <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> selectorId<span class="token punctuation">;</span>
    <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 还没有注册过</span>
        selectorId <span class="token operator">=</span> <span class="token function">registerSelector</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getRpcType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getAppName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 已经注册过，业务系统重启了会到这里</span>
        selectorId <span class="token operator">=</span> selectorDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//update upstream</span>
        <span class="token class-name">String</span> handle <span class="token operator">=</span> selectorDO<span class="token punctuation">.</span><span class="token function">getHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> handleAdd<span class="token punctuation">;</span>
        <span class="token class-name">DivideUpstream</span> addDivideUpstream <span class="token operator">=</span> <span class="token function">buildDivideUpstream</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">buildByName</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            handleAdd <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DivideUpstream</span><span class="token punctuation">&gt;</span></span> exist <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromList</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> <span class="token class-name">DivideUpstream</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">DivideUpstream</span> upstream <span class="token operator">:</span> exist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>upstream<span class="token punctuation">.</span><span class="token function">getUpstreamUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">.</span><span class="token function">getUpstreamUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> selectorId<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            exist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            handleAdd <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>exist<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        selectorDO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handleAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorData<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handleAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// update db</span>
        selectorMapper<span class="token punctuation">.</span><span class="token function">updateSelective</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// submit upstreamCheck</span>
        upstreamCheckService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// publish change event.</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> <span class="token class-name">DataEventTypeEnum</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">,</span>
                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> selectorId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-1-first-access-to-soul-gateway" tabindex="-1"><a class="header-anchor" href="#_2-1-1-first-access-to-soul-gateway" aria-hidden="true">#</a> 2.1.1 First Access to Soul Gateway</h4><p>For the new access, the selectorDO cannot be found in the database. Enter the registerSelector method to carefully see which database tables have been inserted with data.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">registerSelector</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> contextPath<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> rpcType<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> appName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SelectorDTO</span> selectorDTO <span class="token operator">=</span> <span class="token class-name">SelectorDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token class-name">SelectorTypeEnum</span><span class="token punctuation">.</span><span class="token constant">CUSTOM_FLOW</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">matchMode</span><span class="token punctuation">(</span><span class="token class-name">MatchModeEnum</span><span class="token punctuation">.</span><span class="token constant">AND</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">enabled</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">loged</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">continued</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">DUBBO</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">DUBBO</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SPRING_CLOUD</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">SPRING_CLOUD</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span><span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token function">buildSpringCloudSelectorHandle</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SOFA</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">SOFA</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">TARS</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">TARS</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//is divide</span>
        <span class="token class-name">DivideUpstream</span> divideUpstream <span class="token operator">=</span> <span class="token function">buildDivideUpstream</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> handler <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>divideUpstream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorDTO<span class="token punctuation">.</span><span class="token function">setPluginId</span><span class="token punctuation">(</span><span class="token function">getPluginId</span><span class="token punctuation">(</span><span class="token class-name">PluginEnum</span><span class="token punctuation">.</span><span class="token constant">DIVIDE</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        upstreamCheckService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>selectorDTO<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> divideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">SelectorConditionDTO</span> selectorConditionDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SelectorConditionDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setParamType</span><span class="token punctuation">(</span><span class="token class-name">ParamTypeEnum</span><span class="token punctuation">.</span><span class="token constant">URI</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setParamName</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setOperator</span><span class="token punctuation">(</span><span class="token class-name">OperatorEnum</span><span class="token punctuation">.</span><span class="token constant">MATCH</span><span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setParamValue</span><span class="token punctuation">(</span>contextPath <span class="token operator">+</span> <span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    selectorDTO<span class="token punctuation">.</span><span class="token function">setSelectorConditions</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>selectorConditionDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> selectorService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selectorDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Are you excited to see so many if else? You can think about how to optimize so many if else and PR ^-^.</p><p>Having written so much, it is nothing more than encapsulating the Selector DTO object, and finally calling the selectorS ervice. Register (Selector DTO) into the library, and continuing to follow.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SelectorServiceImpl.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SelectorDTO</span> selectorDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SelectorDO</span> selectorDO <span class="token operator">=</span> <span class="token class-name">SelectorDO</span><span class="token punctuation">.</span><span class="token function">buildSelectorDO</span><span class="token punctuation">(</span>selectorDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectorConditionDTO</span><span class="token punctuation">&gt;</span></span> selectorConditionDTOs <span class="token operator">=</span> selectorDTO<span class="token punctuation">.</span><span class="token function">getSelectorConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>selectorDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selectorMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorConditionDTOs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>selectorConditionDTO <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            selectorConditionDTO<span class="token punctuation">.</span><span class="token function">setSelectorId</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 这里在 for 循环里调用 dao 层插入数据，是不是可以考虑挪出去一次性批量插入？</span>
            selectorConditionMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span><span class="token class-name">SelectorConditionDO</span>
                    <span class="token punctuation">.</span><span class="token function">buildSelectorConditionDO</span><span class="token punctuation">(</span>selectorConditionDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">publishEvent</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">,</span> selectorConditionDTOs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> selectorDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can see that there are two warehousing methods, which insert data into the selector and selector _ condition tables respectively. Here we will not discuss the structure and business significance of the table in detail, and we will add it later.</p><p>The publishEvent method, which involves the ApplicationEventPublisher interface, is an implementation of the observer pattern. After the event is published, the subsequent operations are completed through the listener. Here, press No Table first, and then write an article for analysis.</p><h4 id="_2-1-2-soul-gateway-has-been-accessed" tabindex="-1"><a class="header-anchor" href="#_2-1-2-soul-gateway-has-been-accessed" aria-hidden="true">#</a> 2.1.2 Soul Gateway has been accessed</h4><p>Just like Inception, we go back two layers of dreams and go back to the other branch of inserting data. It can be imagined that the system that has been connected to the Soul gateway restarts, or the new node starts to go.</p><p>Post the previous code again:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">handlerSpringMvcSelector</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> contextPath <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 根据 contextPath 到数据库里查询，是否已经注册过。</span>
    <span class="token class-name">SelectorDO</span> selectorDO <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> selectorId<span class="token punctuation">;</span>
    <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 还没有注册过</span>
        selectorId <span class="token operator">=</span> <span class="token function">registerSelector</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getRpcType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getAppName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 已接入的业务系统重启，或新节点启动，会到这里</span>
        selectorId <span class="token operator">=</span> selectorDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//update upstream</span>
        <span class="token comment">// handle 字段存储这个接口真实节点信息，可能存在多台机器需要负载均衡的场景</span>
        <span class="token class-name">String</span> handle <span class="token operator">=</span> selectorDO<span class="token punctuation">.</span><span class="token function">getHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> handleAdd<span class="token punctuation">;</span>
        <span class="token class-name">DivideUpstream</span> addDivideUpstream <span class="token operator">=</span> <span class="token function">buildDivideUpstream</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">buildByName</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 这个接口虽然之前注册过，但第1个服务器节点接入 Soul 时会进来</span>
            handleAdd <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果已经至少有1个服务器节点已接入，会进到这里，判断是否是同一个节点（使用 upstreamUrl 区分），如果相同直接返回</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DivideUpstream</span><span class="token punctuation">&gt;</span></span> exist <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromList</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> <span class="token class-name">DivideUpstream</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">DivideUpstream</span> upstream <span class="token operator">:</span> exist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>upstream<span class="token punctuation">.</span><span class="token function">getUpstreamUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">.</span><span class="token function">getUpstreamUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> selectorId<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 如果不是同一个节点，把新节点加入到 handle 字段中</span>
            exist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            handleAdd <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>exist<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        selectorDO<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handleAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        selectorData<span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span>handleAdd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// update db 更新数据库</span>
        selectorMapper<span class="token punctuation">.</span><span class="token function">updateSelective</span><span class="token punctuation">(</span>selectorDO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// submit upstreamCheck</span>
        upstreamCheckService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> addDivideUpstream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// publish change event.</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> <span class="token class-name">DataEventTypeEnum</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">,</span>
                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> selectorId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Because the database table structure design has not been studied, according to some known guesses, one selector corresponds to one divide plug-in, which is identified by contextPath (here is &quot;/HTTP&quot;), and one contextPath can deploy multiple server nodes. The node information is stored in the handle field as JSON.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// handle/handleAdd 数据格式</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;upstreamHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;upstreamUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10.0.0.12:8188&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;warmup&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The next step is to update the database update Selective.</p><p>upstreamCheckService.submit(contextPath, addDivideUpstream); The real server node information is cached in a Map (UPSTREAM _ MAP), and there are regular tasks to detect the activity. If the service node is found to be down, it will be eliminated to prevent the request from being sent to the node that has been down.</p><p>Then there is the eventPublisher. PublishEvent (), which, like the previous publishEvent method, publishes the event and completes the subsequent operations through the listener. Here, the message of data SelectorData modification is sent through the web socket long connection established with the Soul gateway. The Soul gateway modifies the data according to the message. What data is modified and how to modify it will be analyzed later.</p><p>At this point, the handlerSpringMvcSelector method is finally analyzed.</p><h3 id="_2-let-s-take-a-look-at-the-method-handlerspringmvcrule-which-handles-the-rule" tabindex="-1"><a class="header-anchor" href="#_2-let-s-take-a-look-at-the-method-handlerspringmvcrule-which-handles-the-rule" aria-hidden="true">#</a> 2.Let&#39;s take a look at the method handlerSpringMvcRule, which handles the Rule.</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handlerSpringMvcRule</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> selectorId<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SpringMvcRegisterDTO</span> dto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RuleDO</span> ruleDO <span class="token operator">=</span> ruleMapper<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getRuleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>ruleDO<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">registerRule</span><span class="token punctuation">(</span>selectorId<span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getRpcType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getRuleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>First, take the name of the rule and go to the rule table to get the data. If the table name has been registered, there is no operation.</p><p>Look at the database data, which is the interface address under the business system.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> use soul<span class="token punctuation">;</span>
Database changed

mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> * from rule where name <span class="token operator">=</span> <span class="token string">&#39;/http/order/findById&#39;</span> <span class="token punctuation">\\</span>G
*************************** <span class="token number">1</span>. row ***************************
          id: <span class="token number">1349650371868782592</span>
 selector_id: <span class="token number">1349650371302551552</span>
  match_mode: <span class="token number">0</span>
        name: /http/order/findById
     enabled: <span class="token number">1</span>
       loged: <span class="token number">1</span>
        sort: <span class="token number">1</span>
      handle: <span class="token punctuation">{</span><span class="token string">&quot;loadBalance&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;random&quot;</span>,<span class="token string">&quot;retry&quot;</span>:0,<span class="token string">&quot;timeout&quot;</span>:3000<span class="token punctuation">}</span>
date_created: <span class="token number">2021</span>-01-14 <span class="token number">17</span>:31:39
date_updated: <span class="token number">2021</span>-01-14 <span class="token number">17</span>:31:39
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you don&#39;t get the data, register this rule.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SoulClientRegisterServiceImpl.java</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">registerRule</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> selectorId<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> rpcType<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> ruleName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RuleHandle</span> ruleHandle <span class="token operator">=</span> <span class="token class-name">RuleHandleFactory</span><span class="token punctuation">.</span><span class="token function">ruleHandle</span><span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token function">acquireByName</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RuleDTO</span> ruleDTO <span class="token operator">=</span> <span class="token class-name">RuleDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">selectorId</span><span class="token punctuation">(</span>selectorId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span>ruleName<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">matchMode</span><span class="token punctuation">(</span><span class="token class-name">MatchModeEnum</span><span class="token punctuation">.</span><span class="token constant">AND</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">enabled</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">loged</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>ruleHandle<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RuleConditionDTO</span> ruleConditionDTO <span class="token operator">=</span> <span class="token class-name">RuleConditionDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">paramType</span><span class="token punctuation">(</span><span class="token class-name">ParamTypeEnum</span><span class="token punctuation">.</span><span class="token constant">URI</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">paramName</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">paramValue</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ruleConditionDTO<span class="token punctuation">.</span><span class="token function">setOperator</span><span class="token punctuation">(</span><span class="token class-name">OperatorEnum</span><span class="token punctuation">.</span><span class="token constant">MATCH</span><span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        ruleConditionDTO<span class="token punctuation">.</span><span class="token function">setOperator</span><span class="token punctuation">(</span><span class="token class-name">OperatorEnum</span><span class="token punctuation">.</span><span class="token constant">EQ</span><span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ruleDTO<span class="token punctuation">.</span><span class="token function">setRuleConditions</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>ruleConditionDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ruleService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>ruleDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the first line, the corresponding RuleHandle is obtained according to rpcType ( &quot;HTTP&quot;). Here, three types are built in by default. Here, HTTP corresponds to DivideRuleHandle.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// RuleHandleFactory.java</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">RuleHandleFactory</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * The RpcType to RuleHandle class map.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">RuleHandle</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The default RuleHandle.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">RuleHandle</span><span class="token punctuation">&gt;</span></span> <span class="token constant">DEFAULT_RULE_HANDLE</span> <span class="token operator">=</span> <span class="token class-name">SpringCloudRuleHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">HTTP</span><span class="token punctuation">,</span> <span class="token class-name">DivideRuleHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">DUBBO</span><span class="token punctuation">,</span> <span class="token class-name">DubboRuleHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">RpcTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SOFA</span><span class="token punctuation">,</span> <span class="token class-name">SofaRuleHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Get a RuleHandle object with given rpc type and path.
     * <span class="token keyword">@param</span> <span class="token parameter">rpcType</span>   rpc type.
     * <span class="token keyword">@param</span> <span class="token parameter">path</span>      path.
     * <span class="token keyword">@return</span>          RuleHandle object.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">RuleHandle</span> <span class="token function">ruleHandle</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">RpcTypeEnum</span> rpcType<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">RuleHandle</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token constant">RPC_TYPE_TO_RULE_HANDLE_CLASS</span><span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>rpcType<span class="token punctuation">,</span> <span class="token constant">DEFAULT_RULE_HANDLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createDefault</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationException</span> <span class="token operator">|</span> <span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SoulException</span><span class="token punctuation">(</span>
                    <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Init RuleHandle failed with rpc type: %s, rule class: %s, exception: %s&quot;</span><span class="token punctuation">,</span>
                            rpcType<span class="token punctuation">,</span>
                            clazz<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s construct the RuleDTO object and register the rules.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// RuleServiceImpl.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">RuleDTO</span> ruleDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RuleDO</span> ruleDO <span class="token operator">=</span> <span class="token class-name">RuleDO</span><span class="token punctuation">.</span><span class="token function">buildRuleDO</span><span class="token punctuation">(</span>ruleDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleConditionDTO</span><span class="token punctuation">&gt;</span></span> ruleConditions <span class="token operator">=</span> ruleDTO<span class="token punctuation">.</span><span class="token function">getRuleConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ruleDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ruleMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>ruleDO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ruleConditions<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>ruleConditionDTO <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            ruleConditionDTO<span class="token punctuation">.</span><span class="token function">setRuleId</span><span class="token punctuation">(</span>ruleDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 这里在 for 循环里调用 dao 层插入数据，是不是可以考虑挪出去一次性批量插入？</span>
            ruleConditionMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span><span class="token class-name">RuleConditionDO</span>
                    <span class="token punctuation">.</span><span class="token function">buildRuleConditionDO</span><span class="token punctuation">(</span>ruleConditionDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">publishEvent</span><span class="token punctuation">(</span>ruleDO<span class="token punctuation">,</span> ruleConditions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ruleDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Insert data into the rule and rule _ condition tables, respectively.</p><p>The publishEvent () method sends RuleData data to the Soul gateway through the web socket long connection.</p><h2 id="_3-sum-up" tabindex="-1"><a class="header-anchor" href="#_3-sum-up" aria-hidden="true">#</a> 3.Sum up</h2><p>At this point, the logical analysis of calling the &quot;/soul-client/springmvc-register&quot; interface is finished, and we summarize as follows:</p><ul><li>Process the selector <ul><li>Add or modify selector and selector _ condition table data, and persist them to MySQL.</li><li>Send data change information to Soul gateway through websocket.</li></ul></li><li>Process the rule <ul><li>Add or modify the data of rule and rule _ condition tables, and persist them to MySQL.</li><li>Send data change information to Soul gateway through websocket.</li></ul></li></ul><p>The table structure and field meaning need further study and research. After the websocket is sent to the Soul gateway, what the gateway has done also needs follow-up analysis.</p><p>At this point, the registration logic of the HTTP user accessing the Soul gateway is analyzed.</p><p>If you have the need to use the gateway in your work, or you have the pursuit of learning the gateway, welcome to analyze and learn with me. Soul Gateway, you deserve it.</p>`,50),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","soul_source_learning_02_http_client_register.html.vue"]]);export{k as default};
