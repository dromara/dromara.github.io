import{_ as p,r as o,o as c,c as l,a as n,b as s,e as t,f as a}from"./app-4323b0ec.js";const i={},u=a(`<h2 id="aim" tabindex="-1"><a class="header-anchor" href="#aim" aria-hidden="true">#</a> Aim</h2><ul><li>What is Resilience4J?</li><li>Resilience 4j experience with soul <ul><li>Current-limiting</li><li>Fuse</li></ul></li><li>Interpretation of Resilience4J Plug-in Source Code</li></ul><h2 id="what-is-resilience4j" tabindex="-1"><a class="header-anchor" href="#what-is-resilience4j" aria-hidden="true">#</a> What is Resilience4j?</h2><ul><li><p>Resilience4J is the recommended fault tolerance scheme of Spring Cloud Gateway. It is a lightweight fault tolerance library.</p></li><li><p>It borrows from Hystrix and uses JDK8 functional programming, namely lambda expressions.</p></li><li><p>In contrast, Netflix Hystrix has a compilation dependency on Archaius. Resilience4j You don&#39;t need to reference all the dependencies. You can reference the relevant modules according to the functions you need. Hystrix will not be updated. Spring offers an alternative to Netflix Hystrix, namely Resilence4J</p></li><li><p>Resilience4J provides a range of usability features that enhance microservices:</p><ul><li>Circuit Breaker</li><li>Rate Limiter</li><li>Isolation based on semaphore</li><li>Cache</li><li>Time limiter</li><li>Request to restart Retry</li></ul></li><li><p>Official Dependency Package</p></li></ul><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>    &lt;dependency&gt;
           &lt;groupId&gt;io.github.resilience4j&lt;/groupId&gt;
           &lt;artifactId&gt;resilience4j-circuitbreaker&lt;/artifactId&gt;
           &lt;version&gt;\${resilience.version}&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resilience-4j-experience-with-soul" tabindex="-1"><a class="header-anchor" href="#resilience-4j-experience-with-soul" aria-hidden="true">#</a> Resilience 4j experience with soul</h2><ul><li><p>First, open Resilience4j <img src="https://img-blog.csdnimg.cn/20210321112151395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODY5MjQz,size_16,color_FFFFFF,t_70" alt=""> in the soul-admin console plug-in management.</p></li><li><p>Add dependency in soul gateway</p></li></ul><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>      &lt;dependency&gt;
           &lt;groupId&gt;org.dromara&lt;/groupId&gt;
           &lt;artifactId&gt;soul-spring-boot-starter-plugin-ratelimiter&lt;/artifactId&gt;
           &lt;version&gt;\${project.version}&lt;/version&gt;
       &lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),r=n("li",null,[n("p",null,"Start three services, a soul-admin, a soul-bootstrap, and a soul-examples-http")],-1),k=n("li",null,[n("p",null,[s("Find Resilience4j in the plug-in list on the soul-admin console and customize the configuration, as shown in the following figure. "),n("img",{src:"https://img-blog.csdnimg.cn/20210321112202189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODY5MjQz,size_16,color_FFFFFF,t_70",alt:""})])],-1),d={href:"https://dromara.org/zh/projects/soul/resilience4j-plugin/",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>* Resilience4j Processing in Detail:

	* timeoutDurationRate：Timeout for waiting to acquire tokens, in milliseconds, default value: 5000.

	* limitRefreshPeriod：Time interval for refreshing tokens, in milliseconds, default value: 500.

	* limitForPeriod：Number of tokens refreshed each time, default value: 50.

	* circuitEnable：Whether to enable circuit breaker, 0: off, 1: on, default value: 0.

	* timeoutDuration：Timeout for circuit breaker, in milliseconds, default value: 30000.

	* fallbackUri：URI for fallback handling.

	* slidingWindowSize：Size of the sliding window, default value: 100.

	* slidingWindowType：Type of the sliding window, 0: based on count, 1: based on time, default value: 0.

	* minimumNumberOfCalls：Minimum number of requests to trigger circuit breaker, circuit breaker statistics will be calculated only if this threshold is exceeded, default value: 100.

	* waitIntervalFunctionInOpenState：Duration for which the circuit breaker remains open, in milliseconds, default value: 10.

	* permittedNumberOfCallsInHalfOpenState：Size of the circular buffer in the half-open state, circuit breaker calculation will be performed only if this number is reached, default value: 10.

	* failureRateThreshold：Percentage of error rate, circuit breaker will only open if this threshold is reached, default value: 50.

	* automaticTransitionFromOpenToHalfOpenEnabled：Whether to automatically transition from open state to half-open state, true: yes, false: no, default value: false.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="current-limiting" tabindex="-1"><a class="header-anchor" href="#current-limiting" aria-hidden="true">#</a> Current-limiting</h3><ul><li>The parameter configuration is checked as follows. If the parameter value is less than the default value, the default value will be directly assigned, so it is convenient to directly modify the configuration of the source code for testing the effect: the number of tokens refreshed each time is 2, the time interval for refreshing tokens is 1 s, and the timeout time is 1 s.</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * check filed default value.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">resilience4JHandle</span> <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">Resilience4JHandle</span></span><span class="token punctuation">}</span>
     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">Resilience4JHandle</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Resilience4JHandle</span> <span class="token function">checkData</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Resilience4JHandle</span> resilience4JHandle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setTimeoutDurationRate</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getTimeoutDurationRate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">TIMEOUT_DURATION_RATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		   <span class="token comment">//resilience4JHandle.setLimitRefreshPeriod(Math.max(resilience4JHandle.getLimitRefreshPeriod(), Constants.LIMIT_REFRESH_PERIOD));</span>
		   <span class="token comment">//resilience4JHandle.setLimitForPeriod(Math.max(resilience4JHandle.getLimitForPeriod(), Constants.LIMIT_FOR_PERIOD));</span>
        <span class="token comment">// Set the number of tokens refreshed each time to 2, and the time interval for refreshing tokens to 1 second</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setLimitRefreshPeriod</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setLimitForPeriod</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setTimeoutDuration</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setCircuitEnable</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getCircuitEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">CIRCUIT_ENABLE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		   <span class="token comment">//resilience4JHandle.setTimeoutDuration(Math.max(resilience4JHandle.getTimeoutDuration(), Constants.TIMEOUT_DURATION));</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setFallbackUri</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getFallbackUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> resilience4JHandle<span class="token punctuation">.</span><span class="token function">getFallbackUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setSlidingWindowSize</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getSlidingWindowSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">SLIDING_WINDOW_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setSlidingWindowType</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getSlidingWindowType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">SLIDING_WINDOW_TYPE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setMinimumNumberOfCalls</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getMinimumNumberOfCalls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">MINIMUM_NUMBER_OF_CALLS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setWaitIntervalFunctionInOpenState</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getWaitIntervalFunctionInOpenState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">WAIT_INTERVAL_FUNCTION_IN_OPEN_STATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setPermittedNumberOfCallsInHalfOpenState</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getPermittedNumberOfCallsInHalfOpenState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">PERMITTED_NUMBER_OF_CALLS_IN_HALF_OPEN_STATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setFailureRateThreshold</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getFailureRateThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">FAILURE_RATE_THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> resilience4JHandle<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Use SuperBenchmarker tool, 4 threads, execute 10s</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token class-name">Users</span>\\v<span class="token operator">-</span>yanb07<span class="token operator">&gt;</span>sb <span class="token operator">-</span>u http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">9195</span><span class="token operator">/</span>http<span class="token operator">/</span>test<span class="token operator">/</span>findByUserId<span class="token operator">?</span>userId<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">-</span>c <span class="token number">4</span> <span class="token operator">-</span><span class="token class-name">N</span> <span class="token number">10</span>
<span class="token class-name">Starting</span> at <span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">28</span>
<span class="token punctuation">[</span><span class="token class-name">Press</span> <span class="token class-name">C</span> <span class="token keyword">to</span> <span class="token namespace">stop</span> the test<span class="token punctuation">]</span>
<span class="token number">23</span>      <span class="token punctuation">(</span><span class="token constant">RPS</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token class-name">Finished</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token class-name">Finished</span> at <span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">51</span> <span class="token punctuation">(</span>took <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">23.0477097</span><span class="token punctuation">)</span>
<span class="token number">24</span>      <span class="token punctuation">(</span><span class="token constant">RPS</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span>                        <span class="token class-name">Status</span> <span class="token number">200</span><span class="token operator">:</span>    <span class="token number">25</span>

<span class="token constant">RPS</span><span class="token operator">:</span> <span class="token number">2.2</span> <span class="token punctuation">(</span>requests<span class="token operator">/</span>second<span class="token punctuation">)</span>
<span class="token class-name">Max</span><span class="token operator">:</span> <span class="token number">2020</span>ms
<span class="token class-name">Min</span><span class="token operator">:</span> <span class="token number">472</span>ms
<span class="token class-name">Avg</span><span class="token operator">:</span> <span class="token number">1677</span>ms

  <span class="token number">50</span><span class="token operator">%</span>   below <span class="token number">1994</span>ms
  <span class="token number">60</span><span class="token operator">%</span>   below <span class="token number">1997</span>ms
  <span class="token number">70</span><span class="token operator">%</span>   below <span class="token number">1999</span>ms
  <span class="token number">80</span><span class="token operator">%</span>   below <span class="token number">1999</span>ms
  <span class="token number">90</span><span class="token operator">%</span>   below <span class="token number">2001</span>ms
  <span class="token number">95</span><span class="token operator">%</span>   below <span class="token number">2019</span>ms
  <span class="token number">98</span><span class="token operator">%</span>   below <span class="token number">2020</span>ms
  <span class="token number">99</span><span class="token operator">%</span>   below <span class="token number">2020</span>ms
<span class="token number">99.9</span><span class="token operator">%</span>   below <span class="token number">2020</span>ms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Output log</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.252</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">36.249</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">36.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">37.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">37.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">38.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">38.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">39.252</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">39.252</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> <span class="token class-name">Current</span> limiting test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The console log outputs two lines per second to verify that the throttling is in effect</p><h3 id="fuse" tabindex="-1"><a class="header-anchor" href="#fuse" aria-hidden="true">#</a> Fuse</h3><ul><li>From the configuration information, we know that the fuse is off by default, and we need to open it.</li><li>Soul-examples-http Add sleep time at call interface</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/findByUserId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">UserDTO</span> <span class="token function">findByUserId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token keyword">final</span> <span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
        <span class="token class-name">UserDTO</span> userDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userDTO<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        userDTO<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Current limiting test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token class-name">RandomUtils</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//throw new Exception(&quot;Exception thrown&quot;);</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> userDTO<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Resilience4JHandle # checkData Manually set the timeout to 1s</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    resilience4JHandle<span class="token punctuation">.</span><span class="token function">setTimeoutDuration</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>The pos interface calls <blockquote><p>http://localhost:9195/http/test/findByUserId?userId=1</p></blockquote></li></ul><p>In case of multiple requests, some requests return normal data, and some requests return the following data, indicating that the timeout fuse is effective.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
  <span class="token string">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Internal Server Error&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;404 NOT_FOUND&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="interpretation-of-resilience4j-plug-in-source-code" tabindex="-1"><a class="header-anchor" href="#interpretation-of-resilience4j-plug-in-source-code" aria-hidden="true">#</a> Interpretation of Resilience4J Plug-in Source Code</h2>`,18),v={href:"https://developer.ibm.com/zh/languages/java/articles/j-cn-with-reactor-response-encode/",target:"_blank",rel:"noopener noreferrer"},b=a(`<ul><li>Resilience4J Plug-in Directory Structure</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>└─resilience4j
    │  Resilience4JPlugin.java                   // Plugin processing, core class
    │
    ├─build
    │      Resilience4JBuilder.java         	 // Build Resilience4JConf object
    │
    ├─conf
    │      Resilience4JConf.java
    │
    ├─executor
    │      CombinedExecutor.java      		 	 // Limiter and circuit breaker executor
    │      Executor.java
    │      RateLimiterExecutor.java    	 		 // Limiter executor
    │
    ├─factory
    │      Resilience4JRegistryFactory.java    	 // Build limiter and circuit breaker objects
    │
    └─handler
            Resilience4JHandler.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Resilience4JPlugn # doExecuteResilience4JPlugn inherits AbstractSoulPlugin like other soul plug-ins. As long as it is enabled, it will go to the core method doExecute through the chain mechanism.</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SoulPluginChain</span> chain<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SelectorData</span> selector<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RuleData</span> rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">SoulContext</span> soulContext <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">CONTEXT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> soulContext <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// Get configuration information object</span>
        <span class="token class-name">Resilience4JHandle</span> resilience4JHandle <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getGson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Resilience4JHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Check configuration information, assign default values if they&#39;re less than defaults</span>
        resilience4JHandle <span class="token operator">=</span> resilience4JHandle<span class="token punctuation">.</span><span class="token function">checkData</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// circuitEnable configuration: 1 enables circuit breaker component, otherwise use limiter component</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getCircuitEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">combined</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> chain<span class="token punctuation">,</span> rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token function">rateLimiter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> chain<span class="token punctuation">,</span> rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Current Limiting Resilience4JPlugin # rateLimiter</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">rateLimiter</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SoulPluginChain</span> chain<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RuleData</span> rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ratelimiterExecutor<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>
            <span class="token comment">// chain.execute(exchange) calls subsequent plugins</span>
            chain<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fallback</span><span class="token punctuation">(</span>ratelimiterExecutor<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Resilience4JBuilder</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">onErrorResume</span><span class="token punctuation">(</span>throwable <span class="token operator">-&gt;</span> ratelimiterExecutor<span class="token punctuation">.</span><span class="token function">withoutFallback</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> throwable<span class="token punctuation">)</span><span class="token punctuation">)</span>


    <span class="token comment">// Called by ratelimiterExecutor.run</span>
    <span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> toRun<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Mono</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fallback<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Resilience4JConf</span> conf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Limiter component</span>
    <span class="token class-name">RateLimiter</span> rateLimiter <span class="token operator">=</span> <span class="token class-name">Resilience4JRegistryFactory</span><span class="token punctuation">.</span><span class="token function">rateLimiter</span><span class="token punctuation">(</span>conf<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> conf<span class="token punctuation">.</span><span class="token function">getRateLimiterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Limiting execution</span>
    <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">to</span> <span class="token operator">=</span> toRun<span class="token punctuation">.</span><span class="token function">transformDeferred</span><span class="token punctuation">(</span><span class="token class-name">RateLimiterOperator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>rateLimiter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fallback <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Execute fallback</span>
        <span class="token keyword">return</span> <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">onErrorResume</span><span class="token punctuation">(</span>fallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">to</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


    <span class="token comment">// to.onErrorResume(fallback);</span>
    <span class="token keyword">default</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">fallback</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">String</span> uri<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">withoutFallback</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">DispatcherHandler</span> dispatcherHandler <span class="token operator">=</span> <span class="token class-name">SpringBeanUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ServerHttpRequest</span> request <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mutate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span><span class="token class-name">UriUtils</span><span class="token punctuation">.</span><span class="token function">createUri</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ServerWebExchange</span> mutated <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">mutate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Execute the fallback</span>
    <span class="token keyword">return</span> dispatcherHandler<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>mutated<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Fuse Resilience 4JPlugin # combined</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">combined</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SoulPluginChain</span> chain<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RuleData</span> rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Resilience4JConf</span> conf <span class="token operator">=</span> <span class="token class-name">Resilience4JBuilder</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> combinedExecutor<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>
                chain<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doOnSuccess</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>status<span class="token punctuation">.</span><span class="token function">is2xxSuccessful</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CircuitBreakerStatusCodeException</span><span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span> <span class="token operator">:</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fallback</span><span class="token punctuation">(</span>combinedExecutor<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> conf<span class="token punctuation">.</span><span class="token function">getFallBackUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> conf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


   <span class="token comment">// Executed in combinedExecutor#run</span>
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> run<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Mono</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fallback<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Resilience4JConf</span> resilience4JConf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RateLimiter</span> rateLimiter <span class="token operator">=</span> <span class="token class-name">Resilience4JRegistryFactory</span><span class="token punctuation">.</span><span class="token function">rateLimiter</span><span class="token punctuation">(</span>resilience4JConf<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resilience4JConf<span class="token punctuation">.</span><span class="token function">getRateLimiterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CircuitBreaker</span> circuitBreaker <span class="token operator">=</span> <span class="token class-name">Resilience4JRegistryFactory</span><span class="token punctuation">.</span><span class="token function">circuitBreaker</span><span class="token punctuation">(</span>resilience4JConf<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resilience4JConf<span class="token punctuation">.</span><span class="token function">getCircuitBreakerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token comment">//Circuit breaker operation</span>
        <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">to</span> <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">transformDeferred</span><span class="token punctuation">(</span><span class="token class-name">CircuitBreakerOperator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>circuitBreaker<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// Limiting operation</span>
                <span class="token punctuation">.</span><span class="token function">transformDeferred</span><span class="token punctuation">(</span><span class="token class-name">RateLimiterOperator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>rateLimiter<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// Set timeout</span>
                <span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span>resilience4JConf<span class="token punctuation">.</span><span class="token function">getTimeLimiterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTimeoutDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// Throw timeout exception if timeout occurs</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">TimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> circuitBreaker<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>
                        resilience4JConf<span class="token punctuation">.</span><span class="token function">getTimeLimiterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTimeoutDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span>
                        t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fallback <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">to</span> <span class="token operator">=</span> <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">onErrorResume</span><span class="token punctuation">(</span>fallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">to</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sum-up" tabindex="-1"><a class="header-anchor" href="#sum-up" aria-hidden="true">#</a> Sum up</h2><ul><li>The soul gateway provides current limiting and fusing, and the fusing is off by default</li><li>If the parameter value is less than the default value, the default value will be used directly</li></ul>`,10);function f(g,h){const e=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[r,k,n("li",null,[n("p",null,[n("a",d,[s(" Introduction to the configuration of soul official website "),t(e)])])])]),m,n("p",null,[s("The soul gateway Resilience4j plug-in source code uses a "),n("a",v,[s("reactive programming"),t(e)]),s(" lot of methods. First, you need to understand responsive programming.")]),b])}const y=p(i,[["render",f],["__file","soul_source_learning_21_resilience4j.html.vue"]]);export{y as default};
