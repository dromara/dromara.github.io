import{_ as n}from"./Sa-Token-v1.38.0-0-256WuZ1k.js";import{_ as o}from"./qrcode_zsxq-DTovgpZN.js";import{_ as p,c as t,a as i,o as s}from"./app-BmgeuuSW.js";const l={};function c(d,e){return s(),t("div",null,e[0]||(e[0]=[i(`<p>Sa-Token 是一个轻量级 Java 权限认证框架，主要解决：登录认证、权限认证、分布式 Session 会话、单点登录、OAuth2.0 等一系列权限相关问题。</p><p>框架针对踢人下线、自动续签、前后台分离、分布式会话…… 等常见业务进行 N 多适配，通过 Sa-Token，你可以以一种极简的方式实现系统的权限认证部分</p><p>Sa-Token v1.38.0 版本更新包括以下内容：</p><ul><li><p>• sa-token-core：</p></li><li><p>• 修复：修复 <code>StpUtil.getSessionByLoginId(xx)</code> 参数为 null 时创建无效 <code>SaSession</code> 的 bug。</p></li><li><p>• 优化：在 <code>SpringBoot 3.x</code> 版本下错误的引入依赖时将得到启动失败的提示。（感谢<code>Uncarbon</code>提交的pr）</p></li><li><p>• 优化：进一步优化权限校验算法，hasXxx API 只会返回 true 或 false，不再抛出异常。</p></li><li><p>• 重构：<code>InvalidContextException</code> 更名为 <code>SaTokenContextException</code>。 <strong>[已做向下兼容处理]</strong></p></li><li><p>• 重构：彻底删除 <code>NotPermissionException</code> 异常中的 <code>getCode()</code> 方法。 <strong>[过期API清理]</strong></p></li><li><p>• 重构：重构 <code>SaTokenException</code> 类方法 <code>throwBy-</code>&gt;<code>notTrue</code>、<code>throwByNull-</code>&gt;<code>notEmpty</code>。**[已做向下兼容处理]**</p></li><li><p>• 重构：<code>StpUtil.getSessionBySessionId</code> 提供的 <code>SessionId</code> 为空时将直接抛出异常，而不是再返回null。**[不向下兼容]**</p></li><li><p>• 新增：新增 <code>Http Digest</code> 认证模块简单实现。 <strong>[重要]</strong></p></li><li><p>• 重构：更换 <code>HttpBasic</code> 认证模块包名。 <strong>[已做向下兼容处理]</strong></p></li><li><p>• 新增：新增 <code>StpUtil.getLoginDeviceByToken(xxx)</code> 方法，用于获取任意 token 的登录设备类型。</p></li><li><p>• 新增：新增 <code>StpUtil.getTokenLastActiveTime()</code> 方法，获取当前 token 最后活跃时间。</p></li><li><p>• 修复：修复“当登录时指定 timeout 小于全局 timeout 时，<code>Account-Session</code> 有效期为全局 timeout”的问题。</p></li><li><p>• 优化：首次获取 <code>Token-Session</code> 时，其有效期将保持和 token 有效期相同，而不是再是全局 timeout 值。</p></li><li><p>• 移除：移除 <code>SaSignConfig</code> 的 <code>isCheckNonce</code> 配置项。 <strong>[不向下兼容]</strong></p></li><li><p>• 新增：<code>SaSignTemplate#checkRequest</code> 增加“可指定参与签名参数”的功能。</p></li><li><p>• 重构：将部分加密算法设置为过期。</p></li><li><p>• 重构：优化 token 读取策略，空字符串将视为没有提交token。</p></li><li><p>• 修复：<code>sa-token-bom</code> 补全缺失依赖。</p></li><li><p>• 优化：二级认证校验之前必须先通过登录认证校验。</p></li><li><p>• 修复：修复 <code>StpUtil.getLoginId(T defaultValue)</code> 传入 null 时无法正确返回值的bug。</p></li><li><p>• sa-token-sso：</p></li><li><p>• 优化：SSO 模式三，API 调用签名校验时，限定参与签名的参数列表，更安全。</p></li><li><p>• 新增：新增 <code>autoRenewTimeout</code> 配置项：是否在每次下发 ticket 时，自动续期 token 的有效期（根据全局 timeout 值）</p></li><li><p>• 新增：<code>SaSsoConfig</code> 新增配置 <code>isCheckSign</code>（是否校验参数签名），方便本地开发时的调试。</p></li><li><p>• 新增：<code>SaSsoConfig</code> 新增配置 <code>currSsoLogin</code>，用于强制指定当前系统的 sso 登录地址。</p></li><li><p>• 重构：整体重构 <code>sa-token-sso</code> 模块，将 <code>server</code> 端和 <code>client</code> 端代码拆分。 <strong>[重要]</strong> <strong>[不向下兼容]</strong></p></li><li><p>• 新增：<code>SaSsoConfig</code> 配置项 <code>ssoLogoutCall</code> 重命名为 <code>currSsoLogoutCall</code>。**[已做向下兼容处理]**</p></li><li><p>• 重构：模式三在校验 Ticket 时，也将强制校验签名才能调通请求。**[不向下兼容]**</p></li><li><p>• 新增：新增 <code>maxRegClient</code> 配置项，用于控制模式三下 client 注册数量。</p></li><li><p>• 新增：新增不同 SSO Client 配置不同 <code>secret-key</code> 的方案。 <strong>[重要]</strong></p></li><li><p>• 重构：匿名 client 将不再能解析出所有应用的 ticket。**[不向下兼容]**</p></li><li><p>• 新增：新增 <code>homeRoute</code> 配置项：在 <code>/sso/auth</code> 登录后不指定 redirect 参数的情况下默认跳转的路由。</p></li><li><p>• 优化：优化登录有效期策略，SSO Client 端登录时将延续 SSO Server 端的会话剩余有效期。</p></li><li><p>• 新增：新增 <code>checkTicketAppendData</code> 策略函数，用于在校验 ticket 后，给 sso-client 端追加返回信息。</p></li><li><p>• 新增：SSO章节文档新增用户数据同步/迁移方案的建议。</p></li><li><p>• 修复：修复利用@字符可以绕过域名允许列表校验的漏洞。 <strong>[漏洞修复]</strong></p></li><li><p>• 修复：禁止 <code>allow-url</code> 配置项 * 符号出现在中间位置，因为这有可能导致校验被绕过。 <strong>[漏洞修复]</strong></p></li><li><p>• 新增插件/示例：</p></li><li><p>• 新增：新增插件 <code>sa-token-hutool-timed-cache</code>，用于整合 Hutool 缓存插件 TimedCache。 <strong>[重要]</strong></p></li><li><p>• 新增：新增 SSM 架构整合 Sa-Token 简单示例。 <strong>[重要]</strong></p></li><li><p>• 新增：新增 beetl 整合 Sa-Token 简单示例。 <strong>[重要]</strong></p></li><li><p>• 文档：</p></li><li><p>• 部分章节将 <code>@Autowired</code> 更换为更合适的 <code>@PostConstruct</code></p></li><li><p>• 新增过滤器执行顺序更改示例。</p></li><li><p>• 其它：</p></li><li><p>• 优化：将跨域处理demo拆分为独立仓库。</p></li><li><p>• 优化：解决 springboot 集成 sa-token 后排除 jsckson 依赖无法成功启动的问题。</p></li><li><p>• 优化：解决 <code>sa-token-jwt</code> 模块重复设置 keyt 秘钥问题。（感谢<code>KonBAI</code>提交的pr）</p></li><li><p>• 优化：jwt模式 token 过期后，抛出的异常描述是 token 已过期，而不再是 token 无效。</p></li><li><p>• 修复：补齐 <code>sa-token-spring-aop</code> 模块中遗漏监听的注解。</p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;!-- Sa-Token 权限认证 --&gt;</span></span>
<span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;cn.dev33&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;sa-token-spring-boot-starter&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;1.38.0&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="代码仓库-https-gitee-com-dromara-sa-token" tabindex="-1"><a class="header-anchor" href="#代码仓库-https-gitee-com-dromara-sa-token"><span>代码仓库：https://gitee.com/dromara/sa-token</span></a></h4><p>框架功能结构图</p><p><img src="`+n+'" alt=""></p><p>昨天无意发现一个用户录制的 Sa-Token 讲解视频，共99集，很用心！</p><p>【【SaToken精讲】都4202年了，还不学习一下Sa-Token，国产轻量级Java权限框架。再也没有spring security的繁琐了！】 https://www.bilibili.com/video/BV1Zt421u7gk/</p><p>关于 Dromara</p><p>Dromara 是由国内顶尖的开源项目作者共同组成的开源社区。提供包括分布式事务，流行工具，企业级认证，微服务RPC，运维监控，Agent监控，分布式日志，调度编排等一系列开源产品、解决方案与咨询、技术支持与培训认证服务。技术栈全面开源共建、 保持社区中立，致力于为全球用户提供微服务云原生解决方案。让参与的每一位开源爱好者，体会到开源的快乐。</p><p>Dromara开源社区目前拥有10+GVP项目，总star数量超过十万，构建了上万人的开源社区，有成千上万的个人及团队在使用Dromara社区的开源项目。</p><p><strong>欢迎大家来到知识星球和我互动</strong></p><p><img src="'+o+'" alt=""></p>',15)]))}const g=p(l,[["render",c],["__file","Sa-Token-v1.38.0.html.vue"]]),S=JSON.parse('{"path":"/zh/blog/Sa-Token-v1.38.0.html","title":"Sa-Token v1.38.0 发布，大幅重构 SSO 模块","lang":"zh-CN","frontmatter":{"title":"Sa-Token v1.38.0 发布，大幅重构 SSO 模块","author":"click33","date":"2024-05-13T00:00:00.000Z","cover":"/assets/img/blog/Sa-Token-v1.38.0-0.png","head":[["meta",{"name":"博客"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuepress-theme-hope-docs-demo.netlify.app/blog/Sa-Token-v1.38.0.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/zh/blog/Sa-Token-v1.38.0.html"}],["meta",{"property":"og:title","content":"Sa-Token v1.38.0 发布，大幅重构 SSO 模块"}],["meta",{"property":"og:description","content":"Sa-Token 是一个轻量级 Java 权限认证框架，主要解决：登录认证、权限认证、分布式 Session 会话、单点登录、OAuth2.0 等一系列权限相关问题。 框架针对踢人下线、自动续签、前后台分离、分布式会话…… 等常见业务进行 N 多适配，通过 Sa-Token，你可以以一种极简的方式实现系统的权限认证部分 Sa-Token v1.38.0..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/blog/Sa-Token-v1.38.0-0.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-08-29T01:43:50.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/blog/Sa-Token-v1.38.0-0.png"}],["meta",{"name":"twitter:image:alt","content":"Sa-Token v1.38.0 发布，大幅重构 SSO 模块"}],["meta",{"property":"article:author","content":"click33"}],["meta",{"property":"article:published_time","content":"2024-05-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-29T01:43:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sa-Token v1.38.0 发布，大幅重构 SSO 模块\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/blog/Sa-Token-v1.38.0-0.png\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/qrcode_zsxq.webp\\"],\\"datePublished\\":\\"2024-05-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-29T01:43:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"click33\\"}]}"]],"description":"Sa-Token 是一个轻量级 Java 权限认证框架，主要解决：登录认证、权限认证、分布式 Session 会话、单点登录、OAuth2.0 等一系列权限相关问题。 框架针对踢人下线、自动续签、前后台分离、分布式会话…… 等常见业务进行 N 多适配，通过 Sa-Token，你可以以一种极简的方式实现系统的权限认证部分 Sa-Token v1.38.0..."},"headers":[],"git":{"createdTime":1724895830000,"updatedTime":1724895830000,"contributors":[{"name":"itanxyu","username":"itanxyu","email":"itanxy@126.com","commits":1,"url":"https://github.com/itanxyu"}]},"readingTime":{"minutes":5.05,"words":1514},"filePathRelative":"zh/blog/Sa-Token-v1.38.0.md","localizedDate":"2024年5月13日","autoDesc":true,"excerpt":"<p>Sa-Token 是一个轻量级 Java 权限认证框架，主要解决：登录认证、权限认证、分布式 Session 会话、单点登录、OAuth2.0 等一系列权限相关问题。</p>\\n<p>框架针对踢人下线、自动续签、前后台分离、分布式会话…… 等常见业务进行 N 多适配，通过 Sa-Token，你可以以一种极简的方式实现系统的权限认证部分</p>\\n<p>Sa-Token v1.38.0 版本更新包括以下内容：</p>\\n<ul>\\n<li>\\n<p>• sa-token-core：</p>\\n</li>\\n<li>\\n<p>•&nbsp;修复：修复&nbsp;<code>StpUtil.getSessionByLoginId(xx)</code>&nbsp;参数为 null 时创建无效&nbsp;<code>SaSession</code>&nbsp;的 bug。</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：在&nbsp;<code>SpringBoot 3.x</code>&nbsp;版本下错误的引入依赖时将得到启动失败的提示。（感谢<code>Uncarbon</code>提交的pr）</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：进一步优化权限校验算法，hasXxx API 只会返回 true 或 false，不再抛出异常。</p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：<code>InvalidContextException</code>&nbsp;更名为&nbsp;<code>SaTokenContextException</code>。&nbsp;<strong>[已做向下兼容处理]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：彻底删除&nbsp;<code>NotPermissionException</code>&nbsp;异常中的&nbsp;<code>getCode()</code>&nbsp;方法。&nbsp;<strong>[过期API清理]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：重构&nbsp;<code>SaTokenException</code>&nbsp;类方法&nbsp;<code>throwBy-</code>&gt;<code>notTrue</code>、<code>throwByNull-</code>&gt;<code>notEmpty</code>。**[已做向下兼容处理]**</p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：<code>StpUtil.getSessionBySessionId</code>&nbsp;提供的&nbsp;<code>SessionId</code>&nbsp;为空时将直接抛出异常，而不是再返回null。**[不向下兼容]**</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增&nbsp;<code>Http Digest</code>&nbsp;认证模块简单实现。&nbsp;<strong>[重要]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：更换&nbsp;<code>HttpBasic</code>&nbsp;认证模块包名。&nbsp;<strong>[已做向下兼容处理]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增&nbsp;<code>StpUtil.getLoginDeviceByToken(xxx)</code>&nbsp;方法，用于获取任意 token 的登录设备类型。</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增&nbsp;<code>StpUtil.getTokenLastActiveTime()</code>&nbsp;方法，获取当前 token 最后活跃时间。</p>\\n</li>\\n<li>\\n<p>•&nbsp;修复：修复“当登录时指定 timeout 小于全局 timeout 时，<code>Account-Session</code>&nbsp;有效期为全局 timeout”的问题。</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：首次获取&nbsp;<code>Token-Session</code>&nbsp;时，其有效期将保持和 token 有效期相同，而不是再是全局 timeout 值。</p>\\n</li>\\n<li>\\n<p>•&nbsp;移除：移除&nbsp;<code>SaSignConfig</code>&nbsp;的&nbsp;<code>isCheckNonce</code>&nbsp;配置项。&nbsp;<strong>[不向下兼容]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：<code>SaSignTemplate#checkRequest</code>&nbsp;增加“可指定参与签名参数”的功能。</p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：将部分加密算法设置为过期。</p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：优化 token 读取策略，空字符串将视为没有提交token。</p>\\n</li>\\n<li>\\n<p>•&nbsp;修复：<code>sa-token-bom</code>&nbsp;补全缺失依赖。</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：二级认证校验之前必须先通过登录认证校验。</p>\\n</li>\\n<li>\\n<p>•&nbsp;修复：修复&nbsp;<code>StpUtil.getLoginId(T defaultValue)</code>&nbsp;传入 null 时无法正确返回值的bug。</p>\\n</li>\\n<li>\\n<p>• sa-token-sso：</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：SSO 模式三，API 调用签名校验时，限定参与签名的参数列表，更安全。</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增&nbsp;<code>autoRenewTimeout</code>&nbsp;配置项：是否在每次下发 ticket 时，自动续期 token 的有效期（根据全局 timeout 值）</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：<code>SaSsoConfig</code>&nbsp;新增配置&nbsp;<code>isCheckSign</code>（是否校验参数签名），方便本地开发时的调试。</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：<code>SaSsoConfig</code>&nbsp;新增配置&nbsp;<code>currSsoLogin</code>，用于强制指定当前系统的 sso 登录地址。</p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：整体重构&nbsp;<code>sa-token-sso</code>&nbsp;模块，将&nbsp;<code>server</code>&nbsp;端和&nbsp;<code>client</code>&nbsp;端代码拆分。&nbsp;<strong>[重要]</strong>&nbsp;<strong>[不向下兼容]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：<code>SaSsoConfig</code>&nbsp;配置项&nbsp;<code>ssoLogoutCall</code>&nbsp;重命名为&nbsp;<code>currSsoLogoutCall</code>。**[已做向下兼容处理]**</p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：模式三在校验 Ticket 时，也将强制校验签名才能调通请求。**[不向下兼容]**</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增&nbsp;<code>maxRegClient</code>&nbsp;配置项，用于控制模式三下 client 注册数量。</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增不同 SSO Client 配置不同&nbsp;<code>secret-key</code>&nbsp;的方案。&nbsp;<strong>[重要]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;重构：匿名 client 将不再能解析出所有应用的 ticket。**[不向下兼容]**</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增&nbsp;<code>homeRoute</code>&nbsp;配置项：在&nbsp;<code>/sso/auth</code>&nbsp;登录后不指定 redirect 参数的情况下默认跳转的路由。</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：优化登录有效期策略，SSO Client 端登录时将延续 SSO Server 端的会话剩余有效期。</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增&nbsp;<code>checkTicketAppendData</code>&nbsp;策略函数，用于在校验 ticket 后，给 sso-client 端追加返回信息。</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：SSO章节文档新增用户数据同步/迁移方案的建议。</p>\\n</li>\\n<li>\\n<p>•&nbsp;修复：修复利用@字符可以绕过域名允许列表校验的漏洞。&nbsp;<strong>[漏洞修复]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;修复：禁止&nbsp;<code>allow-url</code>&nbsp;配置项 * 符号出现在中间位置，因为这有可能导致校验被绕过。&nbsp;<strong>[漏洞修复]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;新增插件/示例：</p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增插件&nbsp;<code>sa-token-hutool-timed-cache</code>，用于整合 Hutool 缓存插件 TimedCache。&nbsp;<strong>[重要]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增 SSM 架构整合 Sa-Token 简单示例。&nbsp;<strong>[重要]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;新增：新增 beetl 整合 Sa-Token 简单示例。&nbsp;<strong>[重要]</strong></p>\\n</li>\\n<li>\\n<p>•&nbsp;文档：</p>\\n</li>\\n<li>\\n<p>•&nbsp;部分章节将&nbsp;<code>@Autowired</code>&nbsp;更换为更合适的&nbsp;<code>@PostConstruct</code></p>\\n</li>\\n<li>\\n<p>•&nbsp;新增过滤器执行顺序更改示例。</p>\\n</li>\\n<li>\\n<p>•&nbsp;其它：</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：将跨域处理demo拆分为独立仓库。</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：解决 springboot 集成 sa-token 后排除 jsckson 依赖无法成功启动的问题。</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：解决&nbsp;<code>sa-token-jwt</code>&nbsp;模块重复设置 keyt 秘钥问题。（感谢<code>KonBAI</code>提交的pr）</p>\\n</li>\\n<li>\\n<p>•&nbsp;优化：jwt模式 token 过期后，抛出的异常描述是 token 已过期，而不再是 token 无效。</p>\\n</li>\\n<li>\\n<p>•&nbsp;修复：补齐&nbsp;<code>sa-token-spring-aop</code>&nbsp;模块中遗漏监听的注解。</p>\\n</li>\\n</ul>"}');export{g as comp,S as data};
