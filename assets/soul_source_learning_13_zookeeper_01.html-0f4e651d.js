import{_ as a,a as e,b as t,c as o,d as p,e as i}from"./zk6-d5b0f14e.js";import{_ as c,r as l,o as u,c as r,a as n,b as k,e as d,f as v}from"./app-57280697.js";const m={},h=v(`<h4 id="start-soul-admin-and-soul-bootstrap-and-use-zookeeper-to-synchronize-data-to-the-gateway" tabindex="-1"><a class="header-anchor" href="#start-soul-admin-and-soul-bootstrap-and-use-zookeeper-to-synchronize-data-to-the-gateway" aria-hidden="true">#</a> Start soul-admin and soul-bootstrap, and use zookeeper to synchronize data to the gateway</h4><h6 id="i-configuration-environment" tabindex="-1"><a class="header-anchor" href="#i-configuration-environment" aria-hidden="true">#</a> I. Configuration environment</h6><ol><li>For soul-admin service configuration, restart the service.</li></ol><p>soul-admin/src/main/resources/application.yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">soul</span><span class="token punctuation">:</span>
  <span class="token key atrule">sync</span><span class="token punctuation">:</span>
    <span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>
      <span class="token key atrule">url</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">2181</span>
      <span class="token key atrule">sessionTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
      <span class="token key atrule">connectionTimeout</span><span class="token punctuation">:</span> <span class="token number">2000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Soul-bootstrap gateway service configuration needs to be restarted</li></ol><p>soul-bootstrap/pom.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--soul data sync start use zookeeper--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.dromara<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>soul-spring-boot-starter-sync-data-zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>soul-bootstrap/src/main/resources/application-local.yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">soul</span><span class="token punctuation">:</span>
  <span class="token key atrule">sync</span><span class="token punctuation">:</span>
    <span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>
      <span class="token key atrule">url</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">2181</span>
      <span class="token key atrule">sessionTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
      <span class="token key atrule">connectionTimeout</span><span class="token punctuation">:</span> <span class="token number">2000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="ii-startup-service" tabindex="-1"><a class="header-anchor" href="#ii-startup-service" aria-hidden="true">#</a> II. Startup Service</h6><ol><li>Start zookeeper</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>zookeeper ./bin/zkServer.sh start
/usr/bin/java
ZooKeeper JMX enabled by default
Using config: /Documents/soft/zookeeper/bin/../conf/zoo.cfg
Starting zookeeper ... STARTED
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>The soul-admin gateway background service is started. After the service is started, you can see the ZooKeeper request call.</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
2021-01-20 17:34:48.752  INFO 64500 --- [-localhost:2181] org.I0Itec.zkclient.ZkEventThread        : Starting ZkClient event thread.
2021-01-20 17:34:48.761  INFO 64500 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:zookeeper.version=3.5.6-c11b7e26bc554b8523dc929761dd28808913f091, built on 10/08/2019 20:18 GMT
2021-01-20 17:34:48.761  INFO 64500 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:host.name=10.7.254.31
2021-01-20 17:34:48.761  INFO 64500 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:java.version=1.8.0_261
2021-01-20 17:34:48.761  INFO 64500 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:java.vendor=Oracle Corporation
......
2021-01-20 17:34:48.806  INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn          : Opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-01-20 17:34:48.826  INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn          : Socket connection established, initiating session, client: /0:0:0:0:0:0:0:1:58214, server: localhost/0:0:0:0:0:0:0:1:2181
2021-01-20 17:34:48.857  INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn          : Session establishment complete on server localhost/0:0:0:0:0:0:0:1:2181, sessionid = 0x1000b5e22f50001, negotiated timeout = 5000
2021-01-20 17:34:48.861  INFO 64500 --- [ain-EventThread] org.I0Itec.zkclient.ZkClient             : zookeeper state changed (SyncConnected)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>The soul-bootstrap gateway service is started. After the service is started, you can see the ZooKeeper request call.</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2021-01-20 17:35:58.996  INFO 64583 --- [           main] s.b.s.d.z.ZookeeperSyncDataConfiguration : you use zookeeper sync soul data.......
2021-01-20 17:35:59.003  INFO 64583 --- [-localhost:2181] org.I0Itec.zkclient.ZkEventThread        : Starting ZkClient event thread.
......

2021-01-20 17:35:59.012  INFO 64583 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:user.home=/Users/liquan
2021-01-20 17:35:59.012  INFO 64583 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:os.memory.total=310MB
2021-01-20 17:35:59.018  INFO 64583 --- [           main] org.apache.zookeeper.ZooKeeper           : Initiating client connection, connectString=localhost:2181 sessionTimeout=5000 watcher=org.I0Itec.zkclient.ZkClient@114a5e0
2021-01-20 17:35:59.121  INFO 64583 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn          : Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000b5e22f50002, negotiated timeout = 5000
2021-01-20 17:35:59.126  INFO 64583 --- [ain-EventThread] org.I0Itec.zkclient.ZkClient             : zookeeper state changed (SyncConnected)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>View the registration information <img src="`+a+`" alt="在这里插入图片描述"> of soul gateway synchronization on zookeeper</li></ol><h6 id="iii-analysis-of-data-synchronization-principle-of-soul-gateway-zookeeper" tabindex="-1"><a class="header-anchor" href="#iii-analysis-of-data-synchronization-principle-of-soul-gateway-zookeeper" aria-hidden="true">#</a> III. Analysis of data synchronization principle of Soul gateway Zookeeper</h6><p>After the soul-admin is started, the zkclient. ZkClient org.I0Itec. Is seen in the console, which is used as an entry point for tracing and debugging.</p><ol><li>Function of ZookeeperConfiguration: Register zkClient to the Spring container.</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// EnableConfigurationProperties Purpose: Enables classes annotated with @ConfigurationProperties. If a configuration class is only annotated with @ConfigurationProperties and not with @Component, then the bean converted from the properties configuration file cannot be obtained in the IOC container. @EnableConfigurationProperties is equivalent to injecting classes that use @ConfigurationProperties.</span>
<span class="token comment">// @ConditionalOnMissingBean If the specified class is missing in the container, perform injection. Opposite of @ConditionalOnBean.</span>
<span class="token doc-comment comment">/**
 * ZookeeperConfiguration .
 * <span class="token keyword">@author</span> xiaoyu(Myth)
 */</span>
<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">ZookeeperProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperConfiguration</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * register zkClient in spring ioc.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">zookeeperProp</span> the zookeeper configuration
     * <span class="token keyword">@return</span> ZkClient <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">ZkClient</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">ZkClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ZkClient</span> <span class="token function">zkClient</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZookeeperProperties</span> zookeeperProp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ZkClient</span><span class="token punctuation">(</span>zookeeperProp<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zookeeperProp<span class="token punctuation">.</span><span class="token function">getSessionTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zookeeperProp<span class="token punctuation">.</span><span class="token function">getConnectionTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After the soul-admin is started, it will read the zookeeper configuration information and inject zkClient into the container to establish a connection with the zookeeper. <img src="`+e+'" alt="pic"></p><figure><img src="'+t+`" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><ol start="2"><li>The afterPropertiesSet method of DataChangedEventDispatcher will be called in the call stack of the instantiated ZkClient.</li></ol><p>The org. Dromara. Soul. Admin. Listener. DataChangedEventDispatcher acts as an event router, which forwards changed events to each ConfigEventListener.</p><p>This class implements the InitializingBean. During the DataChangedEventDispatcher initialization, the afterPropertiesSet method is executed.</p><p>The After PropertiesSet method looks for beans in the container whose type is the DataChangedListener. Class.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataChangedEventDispatcher</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataChangedEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">InitializingBean</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataChangedListener</span><span class="token punctuation">&gt;</span></span> listeners<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">DataChangedEventDispatcher</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> applicationContext<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">DataChangedEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">DataChangedListener</span> listener <span class="token operator">:</span> listeners<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getGroupKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">APP_AUTH</span><span class="token operator">:</span>
                listener<span class="token punctuation">.</span><span class="token function">onAppAuthChanged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AppAuthData</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> event<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Unexpected value: &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getGroupKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataChangedListener</span><span class="token punctuation">&gt;</span></span> listenerBeans <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">DataChangedListener</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>listeners <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>listenerBeans<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>The execution of the afterPropertiesSet method will find the instantiation of DataChangedListener. Class related classes.</li></ol><p>Role of org. Dromara. Soul. Admin. Config. Data SyncConfiguration: Data synchronization configuration class.</p><p>ZookeeperData ChangedListener Data Change Listener, which is used to listen to metadata changes and then synchronize to zookeeper.</p><p>ZookeeperDataInit zookeeper data initialization. Function: Synchronize initialization data to zookeeper.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The type Zookeeper listener.
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;soul.sync.zookeeper&quot;</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">ZookeeperConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperListener</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Config event listener data changed listener.
     * <span class="token keyword">@param</span> <span class="token parameter">zkClient</span> the zk client
     * <span class="token keyword">@return</span> the data changed listener
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">ZookeeperDataChangedListener</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">DataChangedListener</span> <span class="token function">zookeeperDataChangedListener</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ZookeeperDataChangedListener</span><span class="token punctuation">(</span>zkClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * Zookeeper data init zookeeper data init
     * <span class="token keyword">@param</span> <span class="token parameter">zkClient</span>        the zk client
     * <span class="token keyword">@param</span> <span class="token parameter">syncDataService</span> the sync data service
     * <span class="token keyword">@return</span> the zookeeper data init
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">ZookeeperDataInit</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ZookeeperDataInit</span> <span class="token function">zookeeperDataInit</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SyncDataService</span> syncDataService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ZookeeperDataInit</span><span class="token punctuation">(</span>zkClient<span class="token punctuation">,</span> syncDataService<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Role of org. Dromara. Soul. Admin. Listener. Zookeeper. ZookeeperDataInit: responsible for synchronizing initialization data to zookeeper. This class implements the CommandLine Runner.</li></ol><p>CommandLine Runner: Function: SpringBoot will traverse all entity classes that implement CommandLineRunner and execute the run method after the project is started. If it needs to be executed in a certain order, Then you need to use a @ Order annotation on the entity class (or implement the Order interface) to indicate the order.</p><p>The run method calls the syncData Service. SyncAll method.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperDataInit</span> <span class="token keyword">implements</span> <span class="token class-name">CommandLineRunner</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">SyncDataService</span> syncDataService<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * Instantiates a new Zookeeper data init.
     * <span class="token keyword">@param</span> <span class="token parameter">zkClient</span>        the zk client
     * <span class="token keyword">@param</span> <span class="token parameter">syncDataService</span> the sync data service
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ZookeeperDataInit</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SyncDataService</span> syncDataService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>zkClient <span class="token operator">=</span> zkClient<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>syncDataService <span class="token operator">=</span> syncDataService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> pluginPath <span class="token operator">=</span> <span class="token class-name">ZkPathConstants</span><span class="token punctuation">.</span><span class="token constant">PLUGIN_PARENT</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> authPath <span class="token operator">=</span> <span class="token class-name">ZkPathConstants</span><span class="token punctuation">.</span><span class="token constant">APP_AUTH_PARENT</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> metaDataPath <span class="token operator">=</span> <span class="token class-name">ZkPathConstants</span><span class="token punctuation">.</span><span class="token constant">META_DATA</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>pluginPath<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>authPath<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>metaDataPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            syncDataService<span class="token punctuation">.</span><span class="token function">syncAll</span><span class="token punctuation">(</span><span class="token class-name">DataEventTypeEnum</span><span class="token punctuation">.</span><span class="token constant">REFRESH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5、org.dromara.soul.admin.service.sync.SyncDataServiceImpl</p><p>The syncAll method invokes the event publisher to publish an event of DataEventTypeEnum. REFRESH.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The type sync data service.
 * <span class="token keyword">@author</span> xiaoyu(Myth)
 */</span>
<span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">&quot;syncDataService&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SyncDataServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SyncDataService</span> <span class="token punctuation">{</span>
    <span class="token comment">// Publishes events, informing all listeners related to this event.</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ApplicationEventPublisher</span> eventPublisher<span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">syncAll</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">DataEventTypeEnum</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        appAuthService<span class="token punctuation">.</span><span class="token function">syncData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PluginData</span><span class="token punctuation">&gt;</span></span> pluginDataList <span class="token operator">=</span> pluginService<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">PLUGIN</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> pluginDataList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectorData</span><span class="token punctuation">&gt;</span></span> selectorDataList <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> selectorDataList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span></span> ruleDataList <span class="token operator">=</span> ruleService<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> ruleDataList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        metaDataService<span class="token punctuation">.</span><span class="token function">syncData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+'" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><ol start="6"><li>After the event is published, the onApplicationEvent method of the org. Dromara. Soul. Admin. Listener. DataChangedEventDispatcher class will listen to the change of the event and traverse all listeners to synchronize the data. The listener implementation class here is ZookeeperData ChangedListener, which synchronizes data to zookeeper through zkClient according to the corresponding event type.</li></ol><figure><img src="'+p+'" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><ol start="7"><li>Soul-admin initialization to data to zookeeper mind map</li></ol><figure><img src="'+i+'" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><h6 id="iv-summary" tabindex="-1"><a class="header-anchor" href="#iv-summary" aria-hidden="true">#</a> IV. Summary</h6><p>When the soul-admin is started, it will synchronize the gateway data rule, metaData, selector, plugin, etc. To the zookeeper. The data change will publish the DataChangedEvent event, and the listening event will synchronize the data to the zookeeper.</p>',48),g={href:"https://dromara.org/projects/soul/data-sync/",target:"_blank",rel:"noopener noreferrer"};function b(y,f){const s=l("ExternalLinkIcon");return u(),r("div",null,[h,n("p",null,[n("a",g,[k(" Soul gateway data synchronization principle "),d(s)])])])}const z=c(m,[["render",b],["__file","soul_source_learning_13_zookeeper_01.html.vue"]]);export{z as default};
