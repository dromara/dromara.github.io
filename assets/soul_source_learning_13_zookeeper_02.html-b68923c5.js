import{_ as t,a as e,b as p,c as o,d as c,e as i,f as l,g as u}from"./zk14-b2f335c3.js";import{_ as r,r as k,o as d,c as m,a,b as n,e as v,f as b}from"./app-46f6431f.js";const g={},h=a("h4",{id:"start-the-admin-and-gateway-admin-operation-using-zookeeper-to-synchronize-data-to-the-gateway",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#start-the-admin-and-gateway-admin-operation-using-zookeeper-to-synchronize-data-to-the-gateway","aria-hidden":"true"},"#"),n(" Start the admin? And Gateway. Admin operation, using zookeeper to synchronize data to the gateway")],-1),f={href:"https://dromara.org/blog/soul_source_learning_13_zookeeper_01",target:"_blank",rel:"noopener noreferrer"},y=b('<p>The data change will publish the DataChangedEvent event, and the listening event will synchronize the data to the zookeeper. This article follows the previous article to continue to track the source code and analyze the principle of zookeeper synchronizing data to the gateway:</p><ul><li>Soul-admin changes the gateway data and tracks the data synchronization process.</li><li>How soul-bootstrap gets zookeeper data and how it senses changes in gateway data.</li></ul><h6 id="_1-soul-admin-changes-the-gateway-data-and-tracks-the-data-synchronization-process" tabindex="-1"><a class="header-anchor" href="#_1-soul-admin-changes-the-gateway-data-and-tracks-the-data-synchronization-process" aria-hidden="true">#</a> 1. Soul-admin changes the gateway data and tracks the data synchronization process</h6><ol><li>Try to change the status of the divide plug-in in the background of the gateway, debug tracking.</li></ol><figure><img src="'+t+'" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><ol start="2"><li>After the plug-in is updated, a Data ChangedEvent event will be issued.</li></ol><figure><img src="'+e+'" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><ol start="3"><li>Org. Dromara. Soul. Admin. Listener. DataChangedEventDispatcher -- &gt; onApplicationEvent () is responsible for listening to events.</li></ol><figure><img src="'+p+'" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><ol start="4"><li>The org. Dromara. Soul. Admin. Listener. Zookeeper. ZookeeperData ChangedListener is responsible for synchronizing data to zookeeper.</li></ol><figure><img src="'+o+`" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><h6 id="_2-how-does-soul-bootstrap-get-zookeeper-data-and-how-does-it-perceive-changes-in-gateway-data" tabindex="-1"><a class="header-anchor" href="#_2-how-does-soul-bootstrap-get-zookeeper-data-and-how-does-it-perceive-changes-in-gateway-data" aria-hidden="true">#</a> 2. How does soul-bootstrap get zookeeper data and how does it perceive changes in gateway data.</h6><ol><li>Soul-bootstrap dependency</li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.dromara<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>soul-spring-boot-starter-sync-data-zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Soul-bootstrap will automatically inject org. Dromara. Soul. Spring. Boot. Sync. Data. Zookeeper. ZookeeperSyncData Configuration after startup.</li></ol><p>Inject ZkClient into the container by reading the Zookeeper configuration.</p><p>The SyncData Service injects the data synchronization service bean into the container and obtains the ZkClient (zookeeper client) from the Spring container. Plugin Subscriber, metaSubscribers, authSubscribers.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperSyncDataConfiguration</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Sync data service sync data service.
     * <span class="token keyword">@param</span> <span class="token parameter">zkClient</span>          the zk client
     * <span class="token keyword">@param</span> <span class="token parameter">pluginSubscriber</span> the plugin subscriber
     * <span class="token keyword">@param</span> <span class="token parameter">metaSubscribers</span>   the meta subscribers
     * <span class="token keyword">@param</span> <span class="token parameter">authSubscribers</span>   the auth subscribers
     * <span class="token keyword">@return</span> the sync data service
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">SyncDataService</span> <span class="token function">syncDataService</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ObjectProvider</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ZkClient</span><span class="token punctuation">&gt;</span></span> zkClient<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ObjectProvider</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PluginDataSubscriber</span><span class="token punctuation">&gt;</span></span> pluginSubscriber<span class="token punctuation">,</span>
                                           <span class="token keyword">final</span> <span class="token class-name">ObjectProvider</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">MetaDataSubscriber</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> metaSubscribers<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ObjectProvider</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">AuthDataSubscriber</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> authSubscribers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;you use zookeeper sync soul data.......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ZookeeperSyncDataService</span><span class="token punctuation">(</span>zkClient<span class="token punctuation">.</span><span class="token function">getIfAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pluginSubscriber<span class="token punctuation">.</span><span class="token function">getIfAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                metaSubscribers<span class="token punctuation">.</span><span class="token function">getIfAvailable</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token operator">::</span><span class="token function">emptyList</span><span class="token punctuation">)</span><span class="token punctuation">,</span> authSubscribers<span class="token punctuation">.</span><span class="token function">getIfAvailable</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token operator">::</span><span class="token function">emptyList</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * register zkClient in spring ioc.
     * <span class="token keyword">@param</span> <span class="token parameter">zookeeperConfig</span> the zookeeper configuration
     * <span class="token keyword">@return</span> ZkClient <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">ZkClient</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ZkClient</span> <span class="token function">zkClient</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZookeeperConfig</span> zookeeperConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ZkClient</span><span class="token punctuation">(</span>zookeeperConfig<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zookeeperConfig<span class="token punctuation">.</span><span class="token function">getSessionTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zookeeperConfig<span class="token punctuation">.</span><span class="token function">getConnectionTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Initialize the org. Dromara. Soul. Sync. Data. Zookeeper. ZookeeperSyncData Service, that is, after the soul-bootstrap is started, the data will be obtained from the zookeeper and synchronized to the memory.</li></ol><ul><li>watcherData()--&gt; watcherAll() --&gt; watcherPlugin() --&gt; cachePluginData()。</li><li>The zkClient. SubscribeData Changes () monitors the modification and deletion of the contents of the current node and its child nodes.</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperSyncDataService</span> <span class="token keyword">implements</span> <span class="token class-name">SyncDataService</span><span class="token punctuation">,</span> <span class="token class-name">AutoCloseable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">PluginDataSubscriber</span> pluginDataSubscriber<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MetaDataSubscriber</span><span class="token punctuation">&gt;</span></span> metaDataSubscribers<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthDataSubscriber</span><span class="token punctuation">&gt;</span></span> authDataSubscribers<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * Instantiates a new Zookeeper cache manager.
     * <span class="token keyword">@param</span> <span class="token parameter">zkClient</span>             the zk client
     * <span class="token keyword">@param</span> <span class="token parameter">pluginDataSubscriber</span> the plugin data subscriber
     * <span class="token keyword">@param</span> <span class="token parameter">metaDataSubscribers</span>  the meta data subscribers
     * <span class="token keyword">@param</span> <span class="token parameter">authDataSubscribers</span>  the auth data subscribers
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ZookeeperSyncDataService</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">PluginDataSubscriber</span> pluginDataSubscriber<span class="token punctuation">,</span>
                                    <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MetaDataSubscriber</span><span class="token punctuation">&gt;</span></span> metaDataSubscribers<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthDataSubscriber</span><span class="token punctuation">&gt;</span></span> authDataSubscribers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>zkClient <span class="token operator">=</span> zkClient<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pluginDataSubscriber <span class="token operator">=</span> pluginDataSubscriber<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>metaDataSubscribers <span class="token operator">=</span> metaDataSubscribers<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>authDataSubscribers <span class="token operator">=</span> authDataSubscribers<span class="token punctuation">;</span>
        <span class="token function">watcherData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">watchAppAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">watchMetaData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">watcherData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token keyword">final</span> <span class="token class-name">String</span> pluginParent <span class="token operator">=</span> <span class="token class-name">ZkPathConstants</span><span class="token punctuation">.</span><span class="token constant">PLUGIN_PARENT</span><span class="token punctuation">;</span>
	    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> pluginZKs <span class="token operator">=</span> <span class="token function">zkClientGetChildren</span><span class="token punctuation">(</span>pluginParent<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> pluginName <span class="token operator">:</span> pluginZKs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	        <span class="token function">watcherAll</span><span class="token punctuation">(</span>pluginName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token punctuation">}</span>
	    zkClient<span class="token punctuation">.</span><span class="token function">subscribeChildChanges</span><span class="token punctuation">(</span>pluginParent<span class="token punctuation">,</span> <span class="token punctuation">(</span>parentPath<span class="token punctuation">,</span> currentChildren<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
	        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>currentChildren<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> pluginName <span class="token operator">:</span> currentChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	                <span class="token function">watcherAll</span><span class="token punctuation">(</span>pluginName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	            <span class="token punctuation">}</span>
	        <span class="token punctuation">}</span>
	    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">watcherPlugin</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> pluginName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token class-name">String</span> pluginPath <span class="token operator">=</span> <span class="token class-name">ZkPathConstants</span><span class="token punctuation">.</span><span class="token function">buildPluginPath</span><span class="token punctuation">(</span>pluginName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>pluginPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	        zkClient<span class="token punctuation">.</span><span class="token function">createPersistent</span><span class="token punctuation">(</span>pluginPath<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token punctuation">}</span>
	    <span class="token function">cachePluginData</span><span class="token punctuation">(</span>zkClient<span class="token punctuation">.</span><span class="token function">readData</span><span class="token punctuation">(</span>pluginPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token function">subscribePluginDataChanges</span><span class="token punctuation">(</span>pluginPath<span class="token punctuation">,</span> pluginName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>The debug process</li></ol><figure><img src="`+c+`" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><h6 id="_3-how-does-soul-bootstrap-sense-changes-in-gateway-data" tabindex="-1"><a class="header-anchor" href="#_3-how-does-soul-bootstrap-sense-changes-in-gateway-data" aria-hidden="true">#</a> 3. How does soul-bootstrap sense changes in gateway data</h6><ol><li>Put a breakpoint on the org. Dromara. Soul. Sync. Data. Zookeeper. ZookeeperSyncData ServicecacheRuleData method, update the plug-in rule, and observe whether the breakpoint is entered.</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">cacheRuleData</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">RuleData</span> ruleData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>data <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>pluginDataSubscriber<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">onRuleSubscribe</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Soul-admin operates in the background to change the divide plug-in rules. First, soul-admin will publish the event and listen to the event to update the data synchronously to zookeeper.</li></ol><figure><img src="`+i+`" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><ol start="3"><li>Soul-bootstrap has indeed received an update of the plug-in data. According to the &quot;zookeeper synchronization principle&quot; introduced by Soul&#39;s official website, it mainly relies on the watch mechanism of zookeeper.</li></ol><p>Org. Dromara. Soul. Sync. Data. Zookeeper. ZookeeperSyncData Service:</p><p>The zkClient. SubscribeData Changes () monitors the modification and deletion of the contents of the current node and its child nodes.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>zkClient<span class="token punctuation">.</span><span class="token function">subscribeChildChanges</span><span class="token punctuation">(</span>groupParentPath<span class="token punctuation">,</span> <span class="token punctuation">(</span>parentPath<span class="token punctuation">,</span> currentChildren<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>currentChildren<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> addSubscribePath <span class="token operator">=</span> <span class="token function">addSubscribePath</span><span class="token punctuation">(</span>childrenList<span class="token punctuation">,</span> currentChildren<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Get the newly added node data and subscribe to that node</span>
        addSubscribePath<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>addPath <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> realPath <span class="token operator">=</span> <span class="token function">buildRealPath</span><span class="token punctuation">(</span>parentPath<span class="token punctuation">,</span> addPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">cacheRuleData</span><span class="token punctuation">(</span>zkClient<span class="token punctuation">.</span><span class="token function">readData</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> realPath<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">subscribeRuleDataChanges</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">subscribeRuleDataChanges</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    zkClient<span class="token punctuation">.</span><span class="token function">subscribeDataChanges</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">IZkDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleDataChange</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> dataPath<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">cacheRuleData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">RuleData</span><span class="token punctuation">)</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleDataDeleted</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> dataPath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">unCacheRuleData</span><span class="token punctuation">(</span>dataPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+l+'" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure><h6 id="iv-summary" tabindex="-1"><a class="header-anchor" href="#iv-summary" aria-hidden="true">#</a> IV. Summary</h6><figure><img src="'+u+'" alt="pic" tabindex="0"><figcaption>pic</figcaption></figure>',35);function w(S,D){const s=k("ExternalLinkIcon");return d(),m("div",null,[h,a("p",null,[n("The soul-admin "),a("a",f,[n("previous article"),v(s)]),n(" startup process is the entry. After analyzing the soul-admin startup, the gateway data rule, metaData, selector, plugin, etc. Will be synchronized to the zookeeper.")]),y])}const _=r(g,[["render",w],["__file","soul_source_learning_13_zookeeper_02.html.vue"]]);export{_ as default};
