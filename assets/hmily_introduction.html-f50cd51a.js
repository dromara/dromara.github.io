import{_ as n,o as s,c as a,f as t}from"./app-d2f9d831.js";const p={},e=t(`<h1 id="hmily-framework-features-https-github-com-yu199195-hmily" tabindex="-1"><a class="header-anchor" href="#hmily-framework-features-https-github-com-yu199195-hmily" aria-hidden="true">#</a> Hmily Framework Features [https://github.com/yu199195/hmily]</h1><ul><li><p>Seamlessly integrates with Spring and Spring Boot.</p></li><li><p>Seamlessly integrates with Dubbo, Spring Cloud, Motan, and other RPC frameworks.</p></li><li><p>Supports various transaction log storage methods (Redis, MongoDB, MySQL, etc.).</p></li><li><p>Offers multiple serialization methods for different types of logs (Kryo, Protostuff, Hessian).</p></li><li><p>Provides automatic transaction recovery.</p></li><li><p>Supports embedded transaction dependency propagation.</p></li><li><p>Zero-intrusion code and flexible configuration.</p></li></ul><h1 id="why-is-hmily-so-high-performance" tabindex="-1"><a class="header-anchor" href="#why-is-hmily-so-high-performance" aria-hidden="true">#</a> Why is Hmily So High-Performance?</h1><h3 id="_1-asynchronous-read-write-of-transaction-logs-using-disruptor-disruptor-is-a-lock-free-gc-free-concurrency-framework" tabindex="-1"><a class="header-anchor" href="#_1-asynchronous-read-write-of-transaction-logs-using-disruptor-disruptor-is-a-lock-free-gc-free-concurrency-framework" aria-hidden="true">#</a> 1. Asynchronous Read/Write of Transaction Logs Using Disruptor (Disruptor is a Lock-Free, GC-Free Concurrency Framework)</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span>publisher</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">TccTransaction</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">EventTypeEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>threadpool<span class="token punctuation">.</span></span><span class="token class-name">HmilyThreadFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>coordinator<span class="token punctuation">.</span></span><span class="token class-name">CoordinatorService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">HmilyTransactionEvent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">HmilyTransactionEventFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">HmilyConsumerDataHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span>translator<span class="token punctuation">.</span></span><span class="token class-name">HmilyTransactionEventTranslator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lmax<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span></span><span class="token class-name">BlockingWaitStrategy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lmax<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span></span><span class="token class-name">IgnoreExceptionHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lmax<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span></span><span class="token class-name">RingBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lmax<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span>dsl<span class="token punctuation">.</span></span><span class="token class-name">Disruptor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>lmax<span class="token punctuation">.</span>disruptor<span class="token punctuation">.</span>dsl<span class="token punctuation">.</span></span><span class="token class-name">ProducerType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">DisposableBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">LinkedBlockingQueue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicInteger</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * event publisher.
 *
 * <span class="token keyword">@author</span> xiaoyu(Myth)
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HmilyTransactionEventPublisher</span> <span class="token keyword">implements</span> <span class="token class-name">DisposableBean</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Disruptor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HmilyTransactionEvent</span><span class="token punctuation">&gt;</span></span> disruptor<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">CoordinatorService</span> coordinatorService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">HmilyTransactionEventPublisher</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CoordinatorService</span> coordinatorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>coordinatorService <span class="token operator">=</span> coordinatorService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * disruptor start.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">bufferSize</span> this is disruptor buffer size.
     * <span class="token keyword">@param</span> <span class="token parameter">threadSize</span> this is disruptor consumer thread size.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">int</span> bufferSize<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">int</span> threadSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        disruptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Disruptor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HmilyTransactionEventFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bufferSize<span class="token punctuation">,</span> r <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">AtomicInteger</span> index <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> <span class="token string">&quot;disruptor-thread-&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">ProducerType</span><span class="token punctuation">.</span><span class="token constant">MULTI</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BlockingWaitStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">Executor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>threadSize<span class="token punctuation">,</span> threadSize<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">HmilyThreadFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;hmily-log-disruptor&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HmilyConsumerDataHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> consumers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HmilyConsumerDataHandler</span><span class="token punctuation">[</span>threadSize<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> threadSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            consumers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HmilyConsumerDataHandler</span><span class="token punctuation">(</span>executor<span class="token punctuation">,</span> coordinatorService<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        disruptor<span class="token punctuation">.</span><span class="token function">handleEventsWithWorkerPool</span><span class="token punctuation">(</span>consumers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        disruptor<span class="token punctuation">.</span><span class="token function">setDefaultExceptionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IgnoreExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        disruptor<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * publish disruptor event.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">tccTransaction</span> <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">TccTransaction</span></span> <span class="token punctuation">}</span>
     * <span class="token keyword">@param</span> <span class="token parameter">type</span>           <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">EventTypeEnum</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">TccTransaction</span> tccTransaction<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">int</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">RingBuffer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HmilyTransactionEvent</span><span class="token punctuation">&gt;</span></span> ringBuffer <span class="token operator">=</span> disruptor<span class="token punctuation">.</span><span class="token function">getRingBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ringBuffer<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HmilyTransactionEventTranslator</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span> tccTransaction<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        disruptor<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>The default value of bufferSize here is 4094 * 4, which can be configured based on the user&#39;s requirements.</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
   <span class="token class-name">HmilyConsumerDataHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> consumers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HmilyConsumerDataHandler</span><span class="token punctuation">[</span>threadSize<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> threadSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            consumers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HmilyConsumerDataHandler</span><span class="token punctuation">(</span>executor<span class="token punctuation">,</span> coordinatorService<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        disruptor<span class="token punctuation">.</span><span class="token function">handleEventsWithWorkerPool</span><span class="token punctuation">(</span>consumers<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Multiple consumers are employed here to process tasks in the queue.</li></ul><h3 id="_2-asynchronous-execution-of-confirm-and-cancel-methods" tabindex="-1"><a class="header-anchor" href="#_2-asynchronous-execution-of-confirm-and-cancel-methods" aria-hidden="true">#</a> 2.Asynchronous Execution of Confirm and Cancel Methods</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>service<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">TccTransactionContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">TccTransaction</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">TccActionEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>threadpool<span class="token punctuation">.</span></span><span class="token class-name">HmilyThreadFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">HmilyTransactionHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>service<span class="token punctuation">.</span>executor<span class="token punctuation">.</span></span><span class="token class-name">HmilyTransactionExecutor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">ProceedingJoinPoint</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">LinkedBlockingQueue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * this is transaction starter.
 *
 * <span class="token keyword">@author</span> xiaoyu
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StarterHmilyTransactionHandler</span> <span class="token keyword">implements</span> <span class="token class-name">HmilyTransactionHandler</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MAX_THREAD</span> <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">HmilyTransactionExecutor</span> hmilyTransactionExecutor<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Executor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token constant">MAX_THREAD</span><span class="token punctuation">,</span> <span class="token constant">MAX_THREAD</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">HmilyThreadFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;hmily-execute&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">StarterHmilyTransactionHandler</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">HmilyTransactionExecutor</span> hmilyTransactionExecutor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hmilyTransactionExecutor <span class="token operator">=</span> hmilyTransactionExecutor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProceedingJoinPoint</span> point<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">TccTransactionContext</span> context<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> returnValue<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">TccTransaction</span> tccTransaction <span class="token operator">=</span> hmilyTransactionExecutor<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//execute try</span>
                returnValue <span class="token operator">=</span> point<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                tccTransaction<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">TccActionEnum</span><span class="token punctuation">.</span><span class="token constant">TRYING</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                hmilyTransactionExecutor<span class="token punctuation">.</span><span class="token function">updateStatus</span><span class="token punctuation">(</span>tccTransaction<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//if exception ,execute cancel</span>
                <span class="token keyword">final</span> <span class="token class-name">TccTransaction</span> currentTransaction <span class="token operator">=</span> hmilyTransactionExecutor<span class="token punctuation">.</span><span class="token function">getCurrentTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                executor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> hmilyTransactionExecutor
                        <span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span>currentTransaction<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> throwable<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//execute confirm</span>
            <span class="token keyword">final</span> <span class="token class-name">TccTransaction</span> currentTransaction <span class="token operator">=</span> hmilyTransactionExecutor<span class="token punctuation">.</span><span class="token function">getCurrentTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            executor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> hmilyTransactionExecutor<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>currentTransaction<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            hmilyTransactionExecutor<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> returnValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>When an exception occurs in the try method&#39;s AOP aspect, the cancel method is executed asynchronously using a thread pool. If there is no exception, the confirm method is executed.</li></ul><h3 id="a-question-might-arise-what-if-the-cancel-or-confirm-methods-themselves-throw-exceptions" tabindex="-1"><a class="header-anchor" href="#a-question-might-arise-what-if-the-cancel-or-confirm-methods-themselves-throw-exceptions" aria-hidden="true">#</a> A question might arise: What if the cancel or confirm methods themselves throw exceptions?</h3><p>Answer: This scenario is quite rare because you&#39;ve just finished executing the try phase moments ago. Moreover, if such an exception arises, the framework has a built-in scheduling thread pool for recovery, so there&#39;s no need to worry.</p><h3 id="another-question-might-arise-what-if-there-s-an-exception-during-log-storage" tabindex="-1"><a class="header-anchor" href="#another-question-might-arise-what-if-there-s-an-exception-during-log-storage" aria-hidden="true">#</a> Another question might arise: What if there&#39;s an exception during log storage?</h3><p>Answer: First, this is an edge case; second, the log configuration parameters are required during framework startup. Even if log storage fails during runtime, the framework will utilize cached logs, ensuring correct program execution. Lastly, if log storage fails and the system crashes under extremely rare circumstances, well, congratulations, you can consider buying a lottery ticket. The best solution is to not overly concern yourself with such a scenario.</p><h3 id="_3-use-of-threadlocal-cache" tabindex="-1"><a class="header-anchor" href="#_3-use-of-threadlocal-cache" aria-hidden="true">#</a> 3.Use of ThreadLocal Cache</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token doc-comment comment">/**
     * transaction begin.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">point</span> cut point.
     * <span class="token keyword">@return</span> TccTransaction
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">TccTransaction</span> <span class="token function">begin</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProceedingJoinPoint</span> point<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token constant">LOGGER</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;......hmily transaction！start....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//build tccTransaction</span>
        <span class="token keyword">final</span> <span class="token class-name">TccTransaction</span> tccTransaction <span class="token operator">=</span> <span class="token function">buildTccTransaction</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span> <span class="token class-name">TccRoleEnum</span><span class="token punctuation">.</span><span class="token constant">START</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//save tccTransaction in threadLocal</span>
        <span class="token constant">CURRENT</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>tccTransaction<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//publishEvent</span>
        hmilyTransactionEventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span>tccTransaction<span class="token punctuation">,</span> <span class="token class-name">EventTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SAVE</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//set TccTransactionContext this context transfer remote</span>
        <span class="token class-name">TccTransactionContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TccTransactionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//set action is try</span>
        context<span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span><span class="token class-name">TccActionEnum</span><span class="token punctuation">.</span><span class="token constant">TRYING</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">setTransId</span><span class="token punctuation">(</span>tccTransaction<span class="token punctuation">.</span><span class="token function">getTransId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">setRole</span><span class="token punctuation">(</span><span class="token class-name">TccRoleEnum</span><span class="token punctuation">.</span><span class="token constant">START</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TransactionContextLocal</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> tccTransaction<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>It&#39;s important to understand that the ThreadLocal cache holds transaction information for the initiator method. RPC calls form a chain of invocation, ensuring proper storage.</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token doc-comment comment">/**
    * add participant.
    *
    * <span class="token keyword">@param</span> <span class="token parameter">participant</span> <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">Participant</span></span><span class="token punctuation">}</span>
    */</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">enlistParticipant</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Participant</span> participant<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>participant<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token function">getCurrentTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
               <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                   c<span class="token punctuation">.</span><span class="token function">registerParticipant</span><span class="token punctuation">(</span>participant<span class="token punctuation">)</span><span class="token punctuation">;</span>
                   <span class="token function">updateParticipant</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-usage-of-guava-cache" tabindex="-1"><a class="header-anchor" href="#_4-usage-of-guava-cache" aria-hidden="true">#</a> 4.Usage of Guava Cache</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>cache</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cache<span class="token punctuation">.</span></span><span class="token class-name">CacheBuilder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cache<span class="token punctuation">.</span></span><span class="token class-name">CacheLoader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cache<span class="token punctuation">.</span></span><span class="token class-name">LoadingCache</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cache<span class="token punctuation">.</span></span><span class="token class-name">Weigher</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">TccTransaction</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>coordinator<span class="token punctuation">.</span></span><span class="token class-name">CoordinatorService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>helper<span class="token punctuation">.</span></span><span class="token class-name">SpringBeanUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutionException</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * use google guava cache.
 * <span class="token keyword">@author</span> xiaoyu
 */</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">TccTransactionCacheManager</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MAX_COUNT</span> <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">LoadingCache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">TccTransaction</span><span class="token punctuation">&gt;</span></span> <span class="token constant">LOADING_CACHE</span> <span class="token operator">=</span>
            <span class="token class-name">CacheBuilder</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maximumWeight</span><span class="token punctuation">(</span><span class="token constant">MAX_COUNT</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">weigher</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Weigher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">TccTransaction</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span>string<span class="token punctuation">,</span> tccTransaction<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CacheLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">TccTransaction</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> <span class="token class-name">TccTransaction</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token function">cacheTccTransaction</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">CoordinatorService</span> coordinatorService <span class="token operator">=</span> <span class="token class-name">SpringBeanUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">CoordinatorService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">TccTransactionCacheManager</span> <span class="token constant">TCC_TRANSACTION_CACHE_MANAGER</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TccTransactionCacheManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">TccTransactionCacheManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * TccTransactionCacheManager.
     *
     * <span class="token keyword">@return</span> TccTransactionCacheManager
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">TccTransactionCacheManager</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">TCC_TRANSACTION_CACHE_MANAGER</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token constant">LOADING_CACHE</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">TccTransaction</span> <span class="token function">cacheTccTransaction</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>coordinatorService<span class="token punctuation">.</span><span class="token function">findByTransId</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TccTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * cache tccTransaction.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">tccTransaction</span> <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">TccTransaction</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">cacheTccTransaction</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">TccTransaction</span> tccTransaction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">LOADING_CACHE</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>tccTransaction<span class="token punctuation">.</span><span class="token function">getTransId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tccTransaction<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * acquire TccTransaction.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> this guava key.
     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">TccTransaction</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">TccTransaction</span> <span class="token function">getTccTransaction</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant">LOADING_CACHE</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TccTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * remove guava cache by key.
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> guava cache key.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeByKey</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">LOADING_CACHE</span><span class="token punctuation">.</span><span class="token function">invalidate</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Among the participants, we used ThreadLocal, but why don&#39;t we use it among the participants? There are actually two reasons: First, because try and confirm will not be in the same thread, which will cause ThreadLocal to fail. When considering RPC clusters, it may be load balanced to different machines. Here is a detail:</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">TccTransaction</span> <span class="token function">cacheTccTransaction</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>coordinatorService<span class="token punctuation">.</span><span class="token function">findByTransId</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TccTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When the Guava Cache doesn&#39;t have a particular entry, it queries the log for that entry, ensuring support for clustered environments.</p><h3 id="these-four-aspects-collectively-make-hmily-an-asynchronous-high-performance-distributed-tcc-framework" tabindex="-1"><a class="header-anchor" href="#these-four-aspects-collectively-make-hmily-an-asynchronous-high-performance-distributed-tcc-framework" aria-hidden="true">#</a> These four aspects collectively make Hmily an asynchronous, high-performance distributed TCC framework.</h3><h3 id="how-to-use-hmily-https-github-com-yu199195-hmily-tree-master-hmily-tcc-demo" tabindex="-1"><a class="header-anchor" href="#how-to-use-hmily-https-github-com-yu199195-hmily-tree-master-hmily-tcc-demo" aria-hidden="true">#</a> How to Use Hmily?（https://github.com/yu199195/hmily/tree/master/hmily-tcc-demo）</h3><p>Due to package naming issues, the framework package hasn&#39;t been uploaded to the Maven Central Repository. Therefore, users need to clone the code, compile it, and deploy it to their private repository.</p><h3 id="_1-for-dubbo-users" tabindex="-1"><a class="header-anchor" href="#_1-for-dubbo-users" aria-hidden="true">#</a> 1.For Dubbo Users</h3><ul><li>Include in your API project:</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.hmily.tcc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hmily-tcc-annotation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>{you version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Include in your service provider project:</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.hmily.tcc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hmily-tcc-dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>{you version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Configure the startup bean in your XML configuration.</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
<span class="token comment">&lt;!-- Aspect configuration, whether to enable AOP aspect--&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span> <span class="token attr-name">expose-proxy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token comment">&lt;!--Scan the framework&#39;s packages--&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.hmily.tcc.*<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token comment">&lt;!--Startup class attribute configuration--&gt;</span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hmilyTransactionBootstrap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.hmily.tcc.core.bootstrap.HmilyTransactionBootstrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serializer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kryo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>recoverDelayTime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>retryMax<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scheduledDelay<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scheduledThreadMax<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>repositorySupport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>db<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tccDbConfig<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.hmily.tcc.common.config.TccDbConfig<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span>
                          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc:mysql://192.168.1.98:3306/tcc?useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=utf8<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>driverClassName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mysql.jdbc.Driver<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Of course there are many configuration properties, here I only gave a demo. For details, you can refer to this class:</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">RepositorySupportEnum</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * hmily config.
 *
 * <span class="token keyword">@author</span> xiaoyu
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TccConfig</span> <span class="token punctuation">{</span>


    <span class="token doc-comment comment">/**
     * Resource suffix this parameter please fill in about is the transaction store path.
     * If it&#39;s a table store this is a table suffix, it&#39;s stored the same way.
     * If this parameter is not filled in, the applicationName of the application is retrieved by default
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> repositorySuffix<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * log serializer.
     * <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token namespace">com<span class="token punctuation">.</span>hmily<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">SerializeEnum</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> serializer <span class="token operator">=</span> <span class="token string">&quot;kryo&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * scheduledPool Thread size.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> scheduledThreadMax <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * scheduledPool scheduledDelay unit SECONDS.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> scheduledDelay <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * retry max.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> retryMax <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * recoverDelayTime Unit seconds
     * (note that this time represents how many seconds after the local transaction was created before execution).
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> recoverDelayTime <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Parameters when participants perform their own recovery.
     * 1.such as RPC calls time out
     * 2.such as the starter down machine
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> loadFactor <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * repositorySupport.
     * <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">RepositorySupportEnum</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> repositorySupport <span class="token operator">=</span> <span class="token string">&quot;db&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * disruptor bufferSize.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> bufferSize <span class="token operator">=</span> <span class="token number">4096</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * this is disruptor consumerThreads.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> consumerThreads <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * db config.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">TccDbConfig</span> tccDbConfig<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * mongo config.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">TccMongoConfig</span> tccMongoConfig<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * redis config.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">TccRedisConfig</span> tccRedisConfig<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * zookeeper config.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">TccZookeeperConfig</span> tccZookeeperConfig<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * file config.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">TccFileConfig</span> tccFileConfig<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="springcloud-users" tabindex="-1"><a class="header-anchor" href="#springcloud-users" aria-hidden="true">#</a> SpringCloud Users</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.hmily.tcc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hmily-tcc-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>{you version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="motan-users" tabindex="-1"><a class="header-anchor" href="#motan-users" aria-hidden="true">#</a> Motan Users</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.hmily.tcc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hmily-tcc-motan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>{you version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hmily-spring-boot-start-this-makes-it-even-easier-you-just-need-to-import-different-jar-packages-according-to-your-rpc-framework" tabindex="-1"><a class="header-anchor" href="#hmily-spring-boot-start-this-makes-it-even-easier-you-just-need-to-import-different-jar-packages-according-to-your-rpc-framework" aria-hidden="true">#</a> hmily-spring-boot-start - this makes it even easier, you just need to import different jar packages according to your RPC framework.</h3><ul><li>For Dubbo users, add:</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.hmily.tcc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hmily-tcc-spring-boot-starter-dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${your version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>For Spring Cloud users, add:</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.hmily.tcc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hmily-tcc-spring-boot-starter-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${your version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>For Motan users, add:</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.hmily.tcc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hmily-tcc-spring-boot-starter-motan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${your version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Next, configure the settings in your YML file:</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">hmily</span><span class="token punctuation">:</span>
  <span class="token key atrule">tcc</span><span class="token punctuation">:</span>
    <span class="token key atrule">serializer</span><span class="token punctuation">:</span> kryo
    <span class="token key atrule">recoverDelayTime</span><span class="token punctuation">:</span> <span class="token number">128</span>
    <span class="token key atrule">retryMax</span><span class="token punctuation">:</span> <span class="token number">3</span>
    <span class="token key atrule">scheduledDelay</span><span class="token punctuation">:</span> <span class="token number">128</span>
    <span class="token key atrule">scheduledThreadMax</span><span class="token punctuation">:</span> <span class="token number">10</span>
    <span class="token key atrule">repositorySupport</span><span class="token punctuation">:</span> db
    <span class="token key atrule">tccDbConfig</span><span class="token punctuation">:</span>
      <span class="token key atrule">driverClassName</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver
      <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//192.168.1.98<span class="token punctuation">:</span>3306/tcc<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;amp;characterEncoding=utf8</span>
      <span class="token key atrule">username</span><span class="token punctuation">:</span> root
      <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>

    <span class="token comment">#repositorySupport : redis</span>
    <span class="token comment">#tccRedisConfig:</span>
    <span class="token comment">#masterName: mymaster</span>
    <span class="token comment">#sentinel : true</span>
    <span class="token comment">#sentinelUrl : 192.168.1.91:26379;192.168.1.92:26379;192.168.1.93:26379</span>
    <span class="token comment">#password  : foobaredbbexONE123</span>

    <span class="token comment"># repositorySupport : zookeeper</span>
    <span class="token comment">#         host      : 92.168.1.73:2181</span>
    <span class="token comment">#         sessionTimeOut      :  100000</span>
    <span class="token comment">#         rootPath  : /tcc</span>

    <span class="token comment"># repositorySupport : mongodb</span>
    <span class="token comment">#       mongoDbUrl  : 192.168.1.68:27017</span>
    <span class="token comment">#       mongoDbName  :  happylife</span>
    <span class="token comment">#       mongoUserName  : xiaoyu</span>
    <span class="token comment">#       mongoUserPwd   : 123456</span>

    <span class="token comment"># repositorySupport : file</span>
    <span class="token comment">#         path      : /account</span>
    <span class="token comment">#         prefix    :  account</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Using Hmily is simple. Just annotate your interface methods with @Tcc, and you&#39;re good to go.</p></li><li><p>Please note that due to space constraints, some intricate details have been summarized. For those interested, you can star and fork the project on GitHub and join the WeChat group or QQ group for discussions.</p></li><li><p>GitHub repository: https://github.com/yu199195/hmily</p></li><li><p>Thank you once again! If you&#39;re interested, you&#39;re welcome to provide any valuable PR contributions.&quot;</p></li></ul>`,50),c=[e];function o(l,i){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","hmily_introduction.html.vue"]]);export{r as default};
