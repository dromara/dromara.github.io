import{_ as e,r as o,o as c,c as l,a as n,b as s,e as p,f as a}from"./app-6db77336.js";const i={},u=a(`<h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><ul><li>什么是 Resilience4J</li><li>soul 的 Resilience4j 体验 <ul><li>限流</li><li>熔断</li></ul></li><li>Resilience4J 插件源码解读</li></ul><h2 id="什么是-resilience4j" tabindex="-1"><a class="header-anchor" href="#什么是-resilience4j" aria-hidden="true">#</a> 什么是 Resilience4j</h2><ul><li><p>Resilience4J 是 Spring Cloud Gateway 推荐的容错方案，它是一个轻量级的容错库</p></li><li><p>借鉴了 Hystrix 而设计，并且采用 JDK8 这个函数式编程，即 lambda 表达式</p></li><li><p>相比之下， Netflix Hystrix 对 Archaius 具有编译依赖性，Resilience4j 你无需引用全部依赖，可以根据自己需要的功能引用相关的模块即可 Hystrix 不更新了，Spring 提供 Netflix Hystrix 的替换方案，即 Resilence4J</p></li><li><p>Resilience4J 提供了一系列增强微服务的可用性功能：</p><ul><li>断路器 CircuitBreaker</li><li>限流 RateLimiter</li><li>基于信号量的隔离</li><li>缓存</li><li>限时 Timelimiter</li><li>请求重启 Retry</li></ul></li><li><p>官方提供的依赖包</p></li></ul><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>    &lt;dependency&gt;
           &lt;groupId&gt;io.github.resilience4j&lt;/groupId&gt;
           &lt;artifactId&gt;resilience4j-circuitbreaker&lt;/artifactId&gt;
           &lt;version&gt;\${resilience.version}&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="soul-的-resilience4j-体验" tabindex="-1"><a class="header-anchor" href="#soul-的-resilience4j-体验" aria-hidden="true">#</a> soul 的 Resilience4j 体验</h2><ul><li><p>首先在 soul-admin 控制台插件管理开启 Resilience4j <img src="https://img-blog.csdnimg.cn/20210321112151395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODY5MjQz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>在 soul 网关添加依赖</p></li></ul><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>      &lt;dependency&gt;
           &lt;groupId&gt;org.dromara&lt;/groupId&gt;
           &lt;artifactId&gt;soul-spring-boot-starter-plugin-ratelimiter&lt;/artifactId&gt;
           &lt;version&gt;\${project.version}&lt;/version&gt;
       &lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),r=n("li",null,[n("p",null,"启动三个服务,分别是一个 soul-admin，一个 soul-bootstrap，一个 soul-examples-http")],-1),k=n("li",null,[n("p",null,[s("在 soul-admin 控制台找到插件列表的 Resilience4j，自定义配置，如下图， "),n("img",{src:"https://img-blog.csdnimg.cn/20210321112202189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3ODY5MjQz,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"})])],-1),d={href:"https://dromara.org/zh/projects/soul/resilience4j-plugin/",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>* Resilience4j处理详解：

	* timeoutDurationRate：等待获取令牌的超时时间，单位ms，默认值：5000。

	* limitRefreshPeriod：刷新令牌的时间间隔，单位ms，默认值：500。

	* limitForPeriod：每次刷新令牌的数量，默认值：50。

	* circuitEnable：是否开启熔断，0：关闭，1：开启，默认值：0。

	* timeoutDuration：熔断超时时间，单位ms，默认值：30000。

	* fallbackUri：降级处理的uri。

	* slidingWindowSize：滑动窗口大小，默认值：100。

	* slidingWindowType：滑动窗口类型，0：基于计数，1：基于时间，默认值：0。

	* minimumNumberOfCalls：开启熔断的最小请求数，超过这个请求数才开启熔断统计，默认值：100。

	* waitIntervalFunctionInOpenState：熔断器开启持续时间，单位ms，默认值：10。

	* permittedNumberOfCallsInHalfOpenState：半开状态下的环形缓冲区大小，必须达到此数量才会计算失败率，默认值：10。

	* failureRateThreshold：错误率百分比，达到这个阈值，熔断器才会开启，默认值50。

	* automaticTransitionFromOpenToHalfOpenEnabled：是否自动从open状态转换为half-open状态，,true：是，false：否，默认值：false。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="限流" tabindex="-1"><a class="header-anchor" href="#限流" aria-hidden="true">#</a> 限流</h3><ul><li>参数配置 如下是参数配置校验，参数值小于默认值，会直接赋值默认值，因此方便测试效果直接修改源码的配置 ： 每次刷新令牌的数量为 2 ，刷新令牌的时间间隔为 1s，超时时间为 1s</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * check filed default value.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">resilience4JHandle</span> <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">Resilience4JHandle</span></span><span class="token punctuation">}</span>
     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">Resilience4JHandle</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Resilience4JHandle</span> <span class="token function">checkData</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Resilience4JHandle</span> resilience4JHandle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setTimeoutDurationRate</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getTimeoutDurationRate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">TIMEOUT_DURATION_RATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		   <span class="token comment">//resilience4JHandle.setLimitRefreshPeriod(Math.max(resilience4JHandle.getLimitRefreshPeriod(), Constants.LIMIT_REFRESH_PERIOD));</span>
		   <span class="token comment">//resilience4JHandle.setLimitForPeriod(Math.max(resilience4JHandle.getLimitForPeriod(), Constants.LIMIT_FOR_PERIOD));</span>
        <span class="token comment">//每次刷新令牌的数量为2 ，刷新令牌的时间间隔为1s</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setLimitRefreshPeriod</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setLimitForPeriod</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setTimeoutDuration</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setCircuitEnable</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getCircuitEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">CIRCUIT_ENABLE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		   <span class="token comment">//resilience4JHandle.setTimeoutDuration(Math.max(resilience4JHandle.getTimeoutDuration(), Constants.TIMEOUT_DURATION));</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setFallbackUri</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getFallbackUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> resilience4JHandle<span class="token punctuation">.</span><span class="token function">getFallbackUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setSlidingWindowSize</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getSlidingWindowSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">SLIDING_WINDOW_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setSlidingWindowType</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getSlidingWindowType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">SLIDING_WINDOW_TYPE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setMinimumNumberOfCalls</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getMinimumNumberOfCalls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">MINIMUM_NUMBER_OF_CALLS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setWaitIntervalFunctionInOpenState</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getWaitIntervalFunctionInOpenState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">WAIT_INTERVAL_FUNCTION_IN_OPEN_STATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setPermittedNumberOfCallsInHalfOpenState</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getPermittedNumberOfCallsInHalfOpenState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">PERMITTED_NUMBER_OF_CALLS_IN_HALF_OPEN_STATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resilience4JHandle<span class="token punctuation">.</span><span class="token function">setFailureRateThreshold</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getFailureRateThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">FAILURE_RATE_THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> resilience4JHandle<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 SuperBenchmarker 工具，4 个线程，执行 10s</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token class-name">Users</span>\\v<span class="token operator">-</span>yanb07<span class="token operator">&gt;</span>sb <span class="token operator">-</span>u http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">9195</span><span class="token operator">/</span>http<span class="token operator">/</span>test<span class="token operator">/</span>findByUserId<span class="token operator">?</span>userId<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">-</span>c <span class="token number">4</span> <span class="token operator">-</span><span class="token class-name">N</span> <span class="token number">10</span>
<span class="token class-name">Starting</span> at <span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">28</span>
<span class="token punctuation">[</span><span class="token class-name">Press</span> <span class="token class-name">C</span> <span class="token keyword">to</span> <span class="token namespace">stop</span> the test<span class="token punctuation">]</span>
<span class="token number">23</span>      <span class="token punctuation">(</span><span class="token constant">RPS</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token class-name">Finished</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token class-name">Finished</span> at <span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">51</span> <span class="token punctuation">(</span>took <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">23.0477097</span><span class="token punctuation">)</span>
<span class="token number">24</span>      <span class="token punctuation">(</span><span class="token constant">RPS</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span>                        <span class="token class-name">Status</span> <span class="token number">200</span><span class="token operator">:</span>    <span class="token number">25</span>

<span class="token constant">RPS</span><span class="token operator">:</span> <span class="token number">2.2</span> <span class="token punctuation">(</span>requests<span class="token operator">/</span>second<span class="token punctuation">)</span>
<span class="token class-name">Max</span><span class="token operator">:</span> <span class="token number">2020</span>ms
<span class="token class-name">Min</span><span class="token operator">:</span> <span class="token number">472</span>ms
<span class="token class-name">Avg</span><span class="token operator">:</span> <span class="token number">1677</span>ms

  <span class="token number">50</span><span class="token operator">%</span>   below <span class="token number">1994</span>ms
  <span class="token number">60</span><span class="token operator">%</span>   below <span class="token number">1997</span>ms
  <span class="token number">70</span><span class="token operator">%</span>   below <span class="token number">1999</span>ms
  <span class="token number">80</span><span class="token operator">%</span>   below <span class="token number">1999</span>ms
  <span class="token number">90</span><span class="token operator">%</span>   below <span class="token number">2001</span>ms
  <span class="token number">95</span><span class="token operator">%</span>   below <span class="token number">2019</span>ms
  <span class="token number">98</span><span class="token operator">%</span>   below <span class="token number">2020</span>ms
  <span class="token number">99</span><span class="token operator">%</span>   below <span class="token number">2020</span>ms
<span class="token number">99.9</span><span class="token operator">%</span>   below <span class="token number">2020</span>ms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>输出日志</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.252</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">36.249</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">36.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">37.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">37.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">38.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">38.250</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">39.252</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">39.252</span>  <span class="token constant">INFO</span> <span class="token number">379336</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ctor<span class="token operator">-</span>http<span class="token operator">-</span>nio<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>d<span class="token punctuation">.</span>s<span class="token punctuation">.</span>e<span class="token punctuation">.</span>h<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span>HttpTestController</span>  <span class="token operator">:</span> 限流测试
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台日志每秒输出两条，由此验证限流生效</p><h3 id="熔断" tabindex="-1"><a class="header-anchor" href="#熔断" aria-hidden="true">#</a> 熔断</h3><ul><li>从配置信息我们知道熔断器默认是关闭，我们需要开打</li><li>soul-examples-http 调用接口处添加休眠时间</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/findByUserId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">UserDTO</span> <span class="token function">findByUserId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token keyword">final</span> <span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
        <span class="token class-name">UserDTO</span> userDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userDTO<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        userDTO<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;限流测试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token class-name">RandomUtils</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//throw new Exception(&quot;异常抛出&quot;);</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> userDTO<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Resilience4JHandle#checkData 手动设置超时时间为 1s</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    resilience4JHandle<span class="token punctuation">.</span><span class="token function">setTimeoutDuration</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>pos 接口调用 <blockquote><p>http://localhost:9195/http/test/findByUserId?userId=1</p></blockquote></li></ul><p>多次请求时，有的请求返回正常数据，有的请求返回如下数据，表示超时熔断生效</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
  <span class="token string">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Internal Server Error&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;404 NOT_FOUND&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resilience4j-插件源码解读" tabindex="-1"><a class="header-anchor" href="#resilience4j-插件源码解读" aria-hidden="true">#</a> Resilience4J 插件源码解读</h2>`,18),v={href:"https://developer.ibm.com/zh/languages/java/articles/j-cn-with-reactor-response-encode/",target:"_blank",rel:"noopener noreferrer"},b=a(`<ul><li>Resilience4J 插件目录结构</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>└─resilience4j
    │  Resilience4JPlugin.java                   //插件处理，核心类
    │
    ├─build
    │      Resilience4JBuilder.java         	 //构建Resilience4JConf对象
    │
    ├─conf
    │      Resilience4JConf.java
    │
    ├─executor
    │      CombinedExecutor.java      		 	 //限流和熔断执行器
    │      Executor.java
    │      RateLimiterExecutor.java    	 		 //限流执行器
    │
    ├─factory
    │      Resilience4JRegistryFactory.java    	 //限流和熔断对象构建
    │
    └─handler
            Resilience4JHandler.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Resilience4JPlugn#doExecute Resilience4JPlugn 其他 soul 中插件一样继承 AbstractSoulPlugin，只要开启了，通过链式机制执行，都会走到核心方法 doExecute</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SoulPluginChain</span> chain<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SelectorData</span> selector<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RuleData</span> rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">SoulContext</span> soulContext <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">CONTEXT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> soulContext <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">//获取配置信息对象</span>
        <span class="token class-name">Resilience4JHandle</span> resilience4JHandle <span class="token operator">=</span> <span class="token class-name">GsonUtils</span><span class="token punctuation">.</span><span class="token function">getGson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>rule<span class="token punctuation">.</span><span class="token function">getHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Resilience4JHandle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//校验配置信息，如果小于默认值，则赋值默认值</span>
        resilience4JHandle <span class="token operator">=</span> resilience4JHandle<span class="token punctuation">.</span><span class="token function">checkData</span><span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//circuitEnable配置：1 开启熔断组件 ，否则走限流组件</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resilience4JHandle<span class="token punctuation">.</span><span class="token function">getCircuitEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">combined</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> chain<span class="token punctuation">,</span> rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token function">rateLimiter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> chain<span class="token punctuation">,</span> rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>限流 Resilience4JPlugin#rateLimiter</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">rateLimiter</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SoulPluginChain</span> chain<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RuleData</span> rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ratelimiterExecutor<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>
            <span class="token comment">// chain.execute(exchange)  后续插件执行</span>
            chain<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fallback</span><span class="token punctuation">(</span>ratelimiterExecutor<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Resilience4JBuilder</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">onErrorResume</span><span class="token punctuation">(</span>throwable <span class="token operator">-&gt;</span> ratelimiterExecutor<span class="token punctuation">.</span><span class="token function">withoutFallback</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> throwable<span class="token punctuation">)</span><span class="token punctuation">)</span>


    <span class="token comment">//ratelimiterExecutor.run调用</span>
    <span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> toRun<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Mono</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fallback<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Resilience4JConf</span> conf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//限流器组件</span>
    <span class="token class-name">RateLimiter</span> rateLimiter <span class="token operator">=</span> <span class="token class-name">Resilience4JRegistryFactory</span><span class="token punctuation">.</span><span class="token function">rateLimiter</span><span class="token punctuation">(</span>conf<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> conf<span class="token punctuation">.</span><span class="token function">getRateLimiterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//限流执行</span>
    <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">to</span> <span class="token operator">=</span> toRun<span class="token punctuation">.</span><span class="token function">transformDeferred</span><span class="token punctuation">(</span><span class="token class-name">RateLimiterOperator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>rateLimiter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fallback <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//回调的执行</span>
        <span class="token keyword">return</span> <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">onErrorResume</span><span class="token punctuation">(</span>fallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">to</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


    <span class="token comment">// to.onErrorResume(fallback);</span>
    <span class="token keyword">default</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">fallback</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">String</span> uri<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">withoutFallback</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">DispatcherHandler</span> dispatcherHandler <span class="token operator">=</span> <span class="token class-name">SpringBeanUtils</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">DispatcherHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ServerHttpRequest</span> request <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mutate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span><span class="token class-name">UriUtils</span><span class="token punctuation">.</span><span class="token function">createUri</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ServerWebExchange</span> mutated <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">mutate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//回调的执行地方</span>
    <span class="token keyword">return</span> dispatcherHandler<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>mutated<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>熔断 Resilience4JPlugin#combined</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">combined</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SoulPluginChain</span> chain<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RuleData</span> rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Resilience4JConf</span> conf <span class="token operator">=</span> <span class="token class-name">Resilience4JBuilder</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> combinedExecutor<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>
                chain<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doOnSuccess</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>status<span class="token punctuation">.</span><span class="token function">is2xxSuccessful</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CircuitBreakerStatusCodeException</span><span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span> <span class="token operator">:</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fallback</span><span class="token punctuation">(</span>combinedExecutor<span class="token punctuation">,</span> exchange<span class="token punctuation">,</span> conf<span class="token punctuation">.</span><span class="token function">getFallBackUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> conf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


   <span class="token comment">//combinedExecutor#run执行的内容</span>
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> run<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Mono</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fallback<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Resilience4JConf</span> resilience4JConf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RateLimiter</span> rateLimiter <span class="token operator">=</span> <span class="token class-name">Resilience4JRegistryFactory</span><span class="token punctuation">.</span><span class="token function">rateLimiter</span><span class="token punctuation">(</span>resilience4JConf<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resilience4JConf<span class="token punctuation">.</span><span class="token function">getRateLimiterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CircuitBreaker</span> circuitBreaker <span class="token operator">=</span> <span class="token class-name">Resilience4JRegistryFactory</span><span class="token punctuation">.</span><span class="token function">circuitBreaker</span><span class="token punctuation">(</span>resilience4JConf<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resilience4JConf<span class="token punctuation">.</span><span class="token function">getCircuitBreakerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                     <span class="token comment">//断路器的操作</span>
        <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">to</span> <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">transformDeferred</span><span class="token punctuation">(</span><span class="token class-name">CircuitBreakerOperator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>circuitBreaker<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">//限流操作</span>
                <span class="token punctuation">.</span><span class="token function">transformDeferred</span><span class="token punctuation">(</span><span class="token class-name">RateLimiterOperator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>rateLimiter<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">//设置超时时间</span>
                <span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span>resilience4JConf<span class="token punctuation">.</span><span class="token function">getTimeLimiterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTimeoutDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">//如果超时了抛出超时异常</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">TimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> circuitBreaker<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>
                        resilience4JConf<span class="token punctuation">.</span><span class="token function">getTimeLimiterConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTimeoutDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span>
                        t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fallback <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">to</span> <span class="token operator">=</span> <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">onErrorResume</span><span class="token punctuation">(</span>fallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">to</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>soul 网关提供限流和熔断，熔断默认是关闭的</li><li>参数值小于默认值，会直接使用默认值</li></ul>`,10);function f(g,h){const t=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[r,k,n("li",null,[n("p",null,[n("a",d,[s("soul 官网的配置介绍"),p(t)])])])]),m,n("p",null,[s("soul 网关 Resilience4j 插件源码大量使用了"),n("a",v,[s("响应式编程"),p(t)]),s("方式，首先需要对响应式编程了解")]),b])}const x=e(i,[["render",f],["__file","soul_source_learning_21_resilience4j.html.vue"]]);export{x as default};
