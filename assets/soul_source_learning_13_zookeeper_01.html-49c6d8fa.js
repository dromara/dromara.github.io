import{_ as a,a as e,b as t,c as p,d as o,e as c}from"./zk6-d5b0f14e.js";import{_ as i,r as l,o as u,c as r,a as n,b as k,e as d,f as v}from"./app-8de95501.js";const m={},b=v(`<h4 id="启动-soul-admin、soul-bootstrap-使用-zookeeper-同步数据到网关" tabindex="-1"><a class="header-anchor" href="#启动-soul-admin、soul-bootstrap-使用-zookeeper-同步数据到网关" aria-hidden="true">#</a> 启动 soul-admin、soul-bootstrap， 使用 zookeeper 同步数据到网关</h4><h6 id="一、配置环境" tabindex="-1"><a class="header-anchor" href="#一、配置环境" aria-hidden="true">#</a> 一、配置环境</h6><p>1、soul-admin 服务配置，需要重启服务</p><p>soul-admin/src/main/resources/application.yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">soul</span><span class="token punctuation">:</span>
  <span class="token key atrule">sync</span><span class="token punctuation">:</span>
    <span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>
      <span class="token key atrule">url</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">2181</span>
      <span class="token key atrule">sessionTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
      <span class="token key atrule">connectionTimeout</span><span class="token punctuation">:</span> <span class="token number">2000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、soul-bootstrap 网关服务配置，需要重启</p><p>soul-bootstrap/pom.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--soul data sync start use zookeeper--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.dromara<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>soul-spring-boot-starter-sync-data-zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>soul-bootstrap/src/main/resources/application-local.yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">soul</span><span class="token punctuation">:</span>
  <span class="token key atrule">sync</span><span class="token punctuation">:</span>
    <span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>
      <span class="token key atrule">url</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">2181</span>
      <span class="token key atrule">sessionTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
      <span class="token key atrule">connectionTimeout</span><span class="token punctuation">:</span> <span class="token number">2000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="二、启动服务" tabindex="-1"><a class="header-anchor" href="#二、启动服务" aria-hidden="true">#</a> 二、启动服务</h6><p>1、 启动 zookeeper</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>zookeeper ./bin/zkServer.sh start
/usr/bin/java
ZooKeeper JMX enabled by default
Using config: /Documents/soft/zookeeper/bin/../conf/zoo.cfg
Starting zookeeper ... STARTED
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、soul-admin 网关后台服务启动，服务启动后可以看到发起的 ZooKeeper 请求调用</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
2021-01-20 17:34:48.752  INFO 64500 --- [-localhost:2181] org.I0Itec.zkclient.ZkEventThread        : Starting ZkClient event thread.
2021-01-20 17:34:48.761  INFO 64500 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:zookeeper.version=3.5.6-c11b7e26bc554b8523dc929761dd28808913f091, built on 10/08/2019 20:18 GMT
2021-01-20 17:34:48.761  INFO 64500 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:host.name=10.7.254.31
2021-01-20 17:34:48.761  INFO 64500 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:java.version=1.8.0_261
2021-01-20 17:34:48.761  INFO 64500 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:java.vendor=Oracle Corporation
......
2021-01-20 17:34:48.806  INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn          : Opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-01-20 17:34:48.826  INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn          : Socket connection established, initiating session, client: /0:0:0:0:0:0:0:1:58214, server: localhost/0:0:0:0:0:0:0:1:2181
2021-01-20 17:34:48.857  INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn          : Session establishment complete on server localhost/0:0:0:0:0:0:0:1:2181, sessionid = 0x1000b5e22f50001, negotiated timeout = 5000
2021-01-20 17:34:48.861  INFO 64500 --- [ain-EventThread] org.I0Itec.zkclient.ZkClient             : zookeeper state changed (SyncConnected)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、soul-bootstrap 网关服务启动，服务启动后可以看到发起的 ZooKeeper 请求调用</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2021-01-20 17:35:58.996  INFO 64583 --- [           main] s.b.s.d.z.ZookeeperSyncDataConfiguration : you use zookeeper sync soul data.......
2021-01-20 17:35:59.003  INFO 64583 --- [-localhost:2181] org.I0Itec.zkclient.ZkEventThread        : Starting ZkClient event thread.
......

2021-01-20 17:35:59.012  INFO 64583 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:user.home=/Users/liquan
2021-01-20 17:35:59.012  INFO 64583 --- [           main] org.apache.zookeeper.ZooKeeper           : Client environment:os.memory.total=310MB
2021-01-20 17:35:59.018  INFO 64583 --- [           main] org.apache.zookeeper.ZooKeeper           : Initiating client connection, connectString=localhost:2181 sessionTimeout=5000 watcher=org.I0Itec.zkclient.ZkClient@114a5e0
2021-01-20 17:35:59.121  INFO 64583 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn          : Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000b5e22f50002, negotiated timeout = 5000
2021-01-20 17:35:59.126  INFO 64583 --- [ain-EventThread] org.I0Itec.zkclient.ZkClient             : zookeeper state changed (SyncConnected)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、查看 zookeeper 上的 soul 网关同步的注册信息 <img src="`+a+`" alt="在这里插入图片描述"></p><h6 id="三、soul-网关-zookeeper-数据同步原理解析" tabindex="-1"><a class="header-anchor" href="#三、soul-网关-zookeeper-数据同步原理解析" aria-hidden="true">#</a> 三、Soul 网关 Zookeeper 数据同步原理解析</h6><p>在 soul-admin 启动后在控制台中看到了 org.I0Itec.zkclient.ZkClient，以此为入口进行跟踪调试。</p><p>1、ZookeeperConfiguration 作用：注册 zkClient 到 Spring 容器。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// EnableConfigurationProperties 作用：使用 @ConfigurationProperties 注解的类生效。如果一个配置类只配置@ConfigurationProperties注解，而没有使用@Component，那么在IOC容器中是获取不到properties 配置文件转化的bean。@EnableConfigurationProperties 相当于把使用@ConfigurationProperties 的类进行了一次注入。</span>
<span class="token comment">// @ConditionalOnMissingBean 容器中没有指定的类，就进行注入，@ConditionalOnBean与之相反</span>
<span class="token doc-comment comment">/**
 * ZookeeperConfiguration .
 * <span class="token keyword">@author</span> xiaoyu(Myth)
 */</span>
<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">ZookeeperProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperConfiguration</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * register zkClient in spring ioc.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">zookeeperProp</span> the zookeeper configuration
     * <span class="token keyword">@return</span> ZkClient <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">ZkClient</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">ZkClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ZkClient</span> <span class="token function">zkClient</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZookeeperProperties</span> zookeeperProp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ZkClient</span><span class="token punctuation">(</span>zookeeperProp<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zookeeperProp<span class="token punctuation">.</span><span class="token function">getSessionTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zookeeperProp<span class="token punctuation">.</span><span class="token function">getConnectionTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>soul-admin 启动后，会实读取 zookeeper 配置信息，向容器中注入 zkClient 和 zookeeper 建立连接。 <img src="`+e+'" alt="在这里插入图片描述"></p><figure><img src="'+t+`" alt="在这里插入图片描述" tabindex="0"><figcaption>在这里插入图片描述</figcaption></figure><p>2、实例化 ZkClient 的调用栈中会调用 DataChangedEventDispatcher 的 afterPropertiesSet 方法。</p><p>org.dromara.soul.admin.listener.DataChangedEventDispatcher 作用：事件转发器，将更改的事件转发到每个 ConfigEventListener。</p><p>此类 实现了 InitializingBean，在 DataChangedEventDispatcher 初始化过程中，会执行 afterPropertiesSet 方法。</p><p>afterPropertiesSet 方法会在容器中查找类型是 DataChangedListener.class 的 bean。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataChangedEventDispatcher</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataChangedEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">InitializingBean</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataChangedListener</span><span class="token punctuation">&gt;</span></span> listeners<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">DataChangedEventDispatcher</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> applicationContext<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">DataChangedEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">DataChangedListener</span> listener <span class="token operator">:</span> listeners<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getGroupKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">APP_AUTH</span><span class="token operator">:</span>
                listener<span class="token punctuation">.</span><span class="token function">onAppAuthChanged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AppAuthData</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> event<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Unexpected value: &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getGroupKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataChangedListener</span><span class="token punctuation">&gt;</span></span> listenerBeans <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">DataChangedListener</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>listeners <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>listenerBeans<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、afterPropertiesSet 方法的执行会查找 DataChangedListener.class 相关类的实例化。</p><p>org.dromara.soul.admin.config.DataSyncConfiguration 作用：数据同步配置类。</p><p>ZookeeperDataChangedListener 数据变化监听器，作用：应该是监听元数据变化，然后同步到 zookeeper。</p><p>ZookeeperDataInit zookeeper 数据初始化，作用：向 zookeeper 同步初始化数据。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The type Zookeeper listener.
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;soul.sync.zookeeper&quot;</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">ZookeeperConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperListener</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Config event listener data changed listener.
     * <span class="token keyword">@param</span> <span class="token parameter">zkClient</span> the zk client
     * <span class="token keyword">@return</span> the data changed listener
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">ZookeeperDataChangedListener</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">DataChangedListener</span> <span class="token function">zookeeperDataChangedListener</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ZookeeperDataChangedListener</span><span class="token punctuation">(</span>zkClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * Zookeeper data init zookeeper data init
     * <span class="token keyword">@param</span> <span class="token parameter">zkClient</span>        the zk client
     * <span class="token keyword">@param</span> <span class="token parameter">syncDataService</span> the sync data service
     * <span class="token keyword">@return</span> the zookeeper data init
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">ZookeeperDataInit</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ZookeeperDataInit</span> <span class="token function">zookeeperDataInit</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SyncDataService</span> syncDataService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ZookeeperDataInit</span><span class="token punctuation">(</span>zkClient<span class="token punctuation">,</span> syncDataService<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、org.dromara.soul.admin.listener.zookeeper.ZookeeperDataInit 作用：负责向 zookeeper 同步初始化数据。此类实现了 CommandLineRunner。</p><p>CommandLineRunner：作用：SpringBoot 在项目启动后会遍历所有实现 CommandLineRunner 的实体类并执行 run 方法，如果需要按照一定的顺序去执行，那么就需要在实体类上使用一个@Order 注解（或者实现 Order 接口）来表明顺序。</p><p>run 方法会调用 syncDataService.syncAll 方法。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperDataInit</span> <span class="token keyword">implements</span> <span class="token class-name">CommandLineRunner</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">SyncDataService</span> syncDataService<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * Instantiates a new Zookeeper data init.
     * <span class="token keyword">@param</span> <span class="token parameter">zkClient</span>        the zk client
     * <span class="token keyword">@param</span> <span class="token parameter">syncDataService</span> the sync data service
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ZookeeperDataInit</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ZkClient</span> zkClient<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SyncDataService</span> syncDataService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>zkClient <span class="token operator">=</span> zkClient<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>syncDataService <span class="token operator">=</span> syncDataService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> pluginPath <span class="token operator">=</span> <span class="token class-name">ZkPathConstants</span><span class="token punctuation">.</span><span class="token constant">PLUGIN_PARENT</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> authPath <span class="token operator">=</span> <span class="token class-name">ZkPathConstants</span><span class="token punctuation">.</span><span class="token constant">APP_AUTH_PARENT</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> metaDataPath <span class="token operator">=</span> <span class="token class-name">ZkPathConstants</span><span class="token punctuation">.</span><span class="token constant">META_DATA</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>pluginPath<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>authPath<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>metaDataPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            syncDataService<span class="token punctuation">.</span><span class="token function">syncAll</span><span class="token punctuation">(</span><span class="token class-name">DataEventTypeEnum</span><span class="token punctuation">.</span><span class="token constant">REFRESH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5、org.dromara.soul.admin.service.sync.SyncDataServiceImpl</p><p>syncAll 方法会调用事件发布器进行事件发布，事件类型是 DataEventTypeEnum.REFRESH。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The type sync data service.
 * <span class="token keyword">@author</span> xiaoyu(Myth)
 */</span>
<span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">&quot;syncDataService&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SyncDataServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SyncDataService</span> <span class="token punctuation">{</span>
    <span class="token comment">// 发布事件，也就是把某个事件告诉的所有与这个事件相关的监听器</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ApplicationEventPublisher</span> eventPublisher<span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">syncAll</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">DataEventTypeEnum</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        appAuthService<span class="token punctuation">.</span><span class="token function">syncData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PluginData</span><span class="token punctuation">&gt;</span></span> pluginDataList <span class="token operator">=</span> pluginService<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">PLUGIN</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> pluginDataList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectorData</span><span class="token punctuation">&gt;</span></span> selectorDataList <span class="token operator">=</span> selectorService<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> selectorDataList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span></span> ruleDataList <span class="token operator">=</span> ruleService<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataChangedEvent</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> ruleDataList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        metaDataService<span class="token punctuation">.</span><span class="token function">syncData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="在这里插入图片描述" tabindex="0"><figcaption>在这里插入图片描述</figcaption></figure><p>6、事件发布后 org.dromara.soul.admin.listener.DataChangedEventDispatcher 类的 onApplicationEvent 方法会监听事件变化，遍历所有的监听者进行数据同步处理，这里的监听者实现类是 ZookeeperDataChangedListener，根据对应的事件类型通过 zkClient 向 zookeeper 同步数据。</p><figure><img src="'+o+'" alt="在这里插入图片描述" tabindex="0"><figcaption>在这里插入图片描述</figcaption></figure><p>7、soul-admin 初始化到数据到 zookeeper 思维导图</p><figure><img src="'+c+'" alt="在这里插入图片描述" tabindex="0"><figcaption>在这里插入图片描述</figcaption></figure><h6 id="四、总结" tabindex="-1"><a class="header-anchor" href="#四、总结" aria-hidden="true">#</a> 四、总结</h6><p>soul-admin 启动就会同步网关数据 rule、metaData、selector、plugin 等到 zookeeper。数据变化会发布 DataChangedEvent 事件，监听事件将数据同步至 zookeeper。</p>',48),g={href:"https://dromara.org/projects/soul/data-sync/",target:"_blank",rel:"noopener noreferrer"};function y(h,C){const s=l("ExternalLinkIcon");return u(),r("div",null,[b,n("p",null,[n("a",g,[k("Soul 网关数据同步原理"),d(s)])])])}const z=i(m,[["render",y],["__file","soul_source_learning_13_zookeeper_01.html.vue"]]);export{z as default};
