import{_ as p,a as o,b as e,c}from"./04-84a944fc.js";import{_ as l,r as u,o as i,c as k,a as s,b as n,e as r,f as a}from"./app-b622e902.js";const d={},v=a('<h2 id="后台与网关数据同步-http-长轮询篇" tabindex="-1"><a class="header-anchor" href="#后台与网关数据同步-http-长轮询篇" aria-hidden="true">#</a> 后台与网关数据同步 (Http 长轮询篇)</h2><p>长轮询分析的最后一篇, 总结网关端的长轮询的实现, 以及数据流动方式.</p><p>网关端长轮询的流程总体也分两个模块: 一是启动时拉取, 二是轮询监听变化</p><h2 id="网关启动时拉取数据" tabindex="-1"><a class="header-anchor" href="#网关启动时拉取数据" aria-hidden="true">#</a> 网关启动时拉取数据</h2><p>网关启动后, 会调用后台提供的接口拉取数据, 并将数据发送到各个插件的数据处理类中</p><p>下面展示下网关启动拉取数据的处理流程: <img src="'+p+'" alt="01"></p><p>这几个处理步骤被分散到下面这些类的方法协作中:</p><figure><img src="'+o+`" alt="02" tabindex="0"><figcaption>02</figcaption></figure><p>HttpSyncDataService#start: 网关启动时, HttpSyncDataService 初始化会调用 <code>start()</code> 方法, 该方法会调用后台拉取数据, 并开启多个线程进行轮询监听 (这块在下个模块分析)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpSyncDataService</span> <span class="token keyword">implements</span> <span class="token class-name">SyncDataService</span><span class="token punctuation">,</span> <span class="token class-name">AutoCloseable</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 防止二次调用的CAS操作</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RUNNING</span><span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 这里是本次流程的重点, 调用拉取数据的方法</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fetchGroupConfig</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> threadSize <span class="token operator">=</span> serverList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 这里将在下个模块分析, 会根据后台集群开启线程轮询监听</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>threadSize<span class="token punctuation">,</span> threadSize<span class="token punctuation">,</span> <span class="token number">60L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span>
                                             <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                             <span class="token class-name">SoulThreadFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;http-long-polling&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>serverList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>server <span class="token operator">-&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpLongPollingTask</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;soul http long polling was started, executor=[{}]&quot;</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HttpSyncDataService#fetchGroupConfig: 作用仅是根据数据类型, 循环多次调用拉取数据方法(针对同一个后台会请求多次, 每次拉取某一种数据类型的信息), 这里的数据类型指的是 plugin、rule、selector 等</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">fetchGroupConfig</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> groups<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SoulException</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>serverList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> server <span class="token operator">=</span> serverList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">// 根据传入的数据类型枚举, 多次调用拉取数据方法</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doFetchGroupConfig</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> groups<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SoulException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> serverList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;fetch config fail, try another one: {}&quot;</span><span class="token punctuation">,</span> serverList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HttpSyncDataService#doFetchGroupConfig: 请求后台的 <code>/configs/fetch</code> 接口, 拿到某个类型的数据, 并更新缓存. 更新缓存前会检测是否变动, 如果变动则结束, <strong>数据未发生变动则睡眠 30s</strong> (由于是第一次启动, 数据为空的情况下肯定会更新缓存, 所以会直接结束)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doFetchGroupConfig</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> server<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> groups<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">StringBuilder</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span> groupKey <span class="token operator">:</span> groups<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;groupKeys&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>groupKey<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 具体请求路径, 拉取后台数据</span>
  <span class="token class-name">String</span> url <span class="token operator">=</span> server <span class="token operator">+</span> <span class="token string">&quot;/configs/fetch?&quot;</span> <span class="token operator">+</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">removeEnd</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;request configs: [{}]&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    json <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>httpClient<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RestClientException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;fetch config fail from server[%s], %s&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SoulException</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 修改缓存信息</span>
  <span class="token keyword">boolean</span> updated <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateCacheWithJson</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 判断是否修改, 修改则直接结束</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>updated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;get latest configs: [{}]&quot;</span><span class="token punctuation">,</span> json<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;The config of the server[{}] has not been updated or is out of date. Wait for 30s to listen for changes again.&quot;</span><span class="token punctuation">,</span> server<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">ThreadUtils</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HttpSyncDataService#updateCacheWithJson: 取出响应信息中的 <code>data</code> , 即变化的数据信息, 传给数据刷新工厂 DataRefreshFactory</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">DataRefreshFactory</span> factory<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">HttpSyncDataService</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataRefreshFactory</span><span class="token punctuation">(</span>pluginDataSubscriber<span class="token punctuation">,</span> metaDataSubscribers<span class="token punctuation">,</span> authDataSubscribers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">updateCacheWithJson</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> json<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">JsonObject</span> jsonObject <span class="token operator">=</span> <span class="token constant">GSON</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">JsonObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">JsonObject</span> data <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getAsJsonObject</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> factory<span class="token punctuation">.</span><span class="token function">executor</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DataRefreshFactory#executor: 将数据发送给各类数据刷新类 (这里没有去区别信息类型, 而是通知所有数据刷新类, 可考虑优化)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">DataRefreshFactory</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">EnumMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">,</span> <span class="token class-name">DataRefresh</span><span class="token punctuation">&gt;</span></span> <span class="token constant">ENUM_MAP</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnumMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">DataRefreshFactory</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">PluginDataSubscriber</span> pluginDataSubscriber<span class="token punctuation">,</span>
                              <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MetaDataSubscriber</span><span class="token punctuation">&gt;</span></span> metaDataSubscribers<span class="token punctuation">,</span>
                              <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthDataSubscriber</span><span class="token punctuation">&gt;</span></span> authDataSubscribers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 注入各类型订阅器到 MAP 中</span>
    <span class="token constant">ENUM_MAP</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">PLUGIN</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PluginDataRefresh</span><span class="token punctuation">(</span>pluginDataSubscriber<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">ENUM_MAP</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SelectorDataRefresh</span><span class="token punctuation">(</span>pluginDataSubscriber<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">ENUM_MAP</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">RuleDataRefresh</span><span class="token punctuation">(</span>pluginDataSubscriber<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">ENUM_MAP</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">APP_AUTH</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AppAuthDataRefresh</span><span class="token punctuation">(</span>authDataSubscribers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">ENUM_MAP</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token constant">META_DATA</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MetaDataRefresh</span><span class="token punctuation">(</span>metaDataSubscribers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">executor</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">JsonObject</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> success <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// Tureen: 所有数据类型的 DataRefresh 全调用</span>
    <span class="token constant">ENUM_MAP</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parallelStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>dataRefresh <span class="token operator">-&gt;</span> success<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dataRefresh<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> success<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AbstractDataRefresh#refresh: 判断是否要更新缓存, 若更新则调用各类型的 <code>refresh()</code> 方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">JsonObject</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">boolean</span> updated <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token class-name">JsonObject</span> jsonObject <span class="token operator">=</span> <span class="token function">convert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> jsonObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ConfigData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token function">fromJson</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateCacheIfNeed</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      updated <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token comment">// Turren: 调用 refresh</span>
      <span class="token function">refresh</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> updated<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PluginDataRefresh#refresh: 调用 plugin 的订阅器, 接下来会通知所有扩展插件的相关事件变动</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PluginData</span><span class="token punctuation">&gt;</span></span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;clear all plugin data cache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pluginDataSubscriber<span class="token punctuation">.</span><span class="token function">refreshPluginDataAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    pluginDataSubscriber<span class="token punctuation">.</span><span class="token function">refreshPluginDataAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Turren: http同步, 调用插件数据订阅器</span>
    data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>pluginDataSubscriber<span class="token operator">::</span><span class="token function">onSubscribe</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网关轮询监听变化" tabindex="-1"><a class="header-anchor" href="#网关轮询监听变化" aria-hidden="true">#</a> 网关轮询监听变化</h2>`,23),m={href:"https://blog.csdn.net/zm469568595/article/details/113207367",target:"_blank",rel:"noopener noreferrer"},b=a('<p>下面展示下网关监听数据变动的整体流程:</p><figure><img src="'+e+'" alt="03" tabindex="0"><figcaption>03</figcaption></figure><p>对应的实际代码实现如下:</p><figure><img src="'+c+`" alt="04" tabindex="0"><figcaption>04</figcaption></figure><p><strong>网关端监听的流程实现都在 HttpSyncDataService 类中, 在最后会经由 <code>doFetchGroupConfig()</code> 传到到各类订阅器, 后面的流程与启动时的一致</strong></p><p>HttpSyncDataService#start: 启动线程执行 HttpLongPollingTask 这个 Runnable</p><p>HttpLongPollingTask#run: 开启循环调用轮询方法.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant">RUNNING</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> time <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> time <span class="token operator">&lt;=</span> retryTimes<span class="token punctuation">;</span> time<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">doLongPolling</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">&lt;</span> retryTimes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Long polling failed, tried {} times, {} times left, will be suspended for a while! {}&quot;</span><span class="token punctuation">,</span>
                   time<span class="token punctuation">,</span> retryTimes <span class="token operator">-</span> time<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">ThreadUtils</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Long polling failed, try again after 5 minutes!&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ThreadUtils</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HttpLongPollingTask#doLongPolling: 得到监听请求的响应结果, 如果返回值中有变化的类型, 则调用数据拉取方法.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doLongPolling</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> server<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 从缓存中获取数据</span>
  <span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ConfigGroupEnum</span> group <span class="token operator">:</span> <span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ConfigData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cacheConfig <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">cacheConfigData</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> cacheConfig<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>cacheConfig<span class="token punctuation">.</span><span class="token function">getLastModifyTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>group<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 构建 http 请求信息</span>
  <span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_FORM_URLENCODED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">HttpEntity</span> httpEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> listenerUrl <span class="token operator">=</span> server <span class="token operator">+</span> <span class="token string">&quot;/configs/listener&quot;</span><span class="token punctuation">;</span>
  log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;request listener configs: [{}]&quot;</span><span class="token punctuation">,</span> listenerUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">JsonArray</span> groupJson <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>httpClient<span class="token punctuation">.</span><span class="token function">postForEntity</span><span class="token punctuation">(</span>listenerUrl<span class="token punctuation">,</span> httpEntity<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    groupJson <span class="token operator">=</span> <span class="token constant">GSON</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">JsonObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsJsonArray</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RestClientException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;listener configs fail, server:[%s], %s&quot;</span><span class="token punctuation">,</span> server<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SoulException</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 得到变化的类型</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>groupJson <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">[</span><span class="token punctuation">]</span> changedGroups <span class="token operator">=</span> <span class="token constant">GSON</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>groupJson<span class="token punctuation">,</span> <span class="token class-name">ConfigGroupEnum</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>changedGroups<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Group config changed: {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>changedGroups<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 拉取后台对应类型的数据</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doFetchGroupConfig</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> changedGroups<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LongPollingClient#doFetchGroupConfig:</p><p>之前的启动里分析了这块的代码, 它与启动里最不同的点是, <strong>如果拉取的数据与缓存比对后, 发现没有变化则睡眠 30s, 会导致下次的监听延后 30s</strong>.</p><p>什么意思呢? 如果网关去 <code>fetch</code> 后台的数据, 拿回来比对后发现被骗了! 啥变化也没有, 就等 30s 再启动下次监听, 这个期间如果后台发生数据变化肯定是没法通知到网关的.</p><p>网关为什么这么做? 自然是为了防止大量的循环的无用拉取, 如果后台出现问题不断的通知数据变动, 但实际没有任何变动, 那么网关不延迟就会与后台产生大量无用的 网络 IO 与 数据交换</p>`,14);function g(f,y){const t=u("ExternalLinkIcon");return i(),k("div",null,[v,s("p",null,[n("网关启动时, 同时也开启了线程做后台监听请求, 监听请求做了 while 死循环来轮询, 在后台端会劫持住请求, 这块在后台总结中有具体分析 ("),s("a",m,[n("后台与网关数据同步 (Http 长轮询篇 <二>)"),r(t)]),n(")")]),b])}const S=l(d,[["render",g],["__file","soul_source_learning_09_httplongpolling_02.html.vue"]]);export{S as default};
