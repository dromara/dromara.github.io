import{_ as a}from"./warm-flow-1.2.4-0--Yo3onCJ.js";import{_ as n}from"./qrcode_zsxq-DTovgpZN.js";import{_ as s,c as l,a as i,o as p}from"./app-DDc8sQ0r.js";const t={};function r(o,e){return p(),l("div",null,e[0]||(e[0]=[i(`<h2 id="warm-flow-1-2-4版本更新" tabindex="-1"><a class="header-anchor" href="#warm-flow-1-2-4版本更新"><span>warm-flow 1.2.4版本更新</span></a></h2><ul><li><p>主要内容，具体详情和升级注意事项，请查看官网更新记录</p></li><li><p>[feat] 激活和挂起</p></li><li><p>[feat] 不同节点也支持配置审批表单路径</p></li><li><p>[feat] 支持接收外部流程状态，支持流程状态扩展</p></li><li><p>[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式</p></li><li><p>[feat] 新增分派监听器，支持代办任务中办理人等动态修改</p></li><li><p>[feat] 新增Easy-Query框架支持</p></li><li><p>[feat] 新增Mybatis-Flex的solon扩展包</p></li><li><p>[feat] 新增Jpa的solon扩展包</p></li><li><p>[feat] 历史表新增跳转类型，记录跳转类型</p></li><li><p>[feat] 增加组件加载，yml控制开关</p></li></ul><h2 id="历史背景" tabindex="-1"><a class="header-anchor" href="#历史背景"><span>历史背景</span></a></h2><p>flowable和activities确实大而全，但是这样对一般的项目会是好事吗？能早点下班吗</p><ol><li><p><strong>学习曲线：</strong> 对于初学者来说，学习可能需要一定的时间和精力。理解其概念、API 和配置可能需要一些耐心和实践。</p></li><li><p><strong>复杂性：</strong> 对于简单的工作流程来说，引入可能会显得过于复杂。在某些情况下，使用简单的解决方案可能更合适。</p></li><li><p><strong>定制化需求：</strong> 在一些特殊场景下，可能需要对进行定制化开发，以满足特定的需求。这可能需要深入理解其内部工作原理和源代码。</p></li><li><p><strong>版本更新：</strong> 随着时间的推移，会发布新的版本，其中可能包含功能改进、bug 修复等。升级到新版本可能需要投入一定的时间和资源，以确保平稳过渡和兼容性。</p></li><li><p><strong>阅读难度：</strong> 全英文注释，对于英文不好的人来说，确实有门槛。</p></li></ol><h2 id="warm-flow能给你带来什么" tabindex="-1"><a class="header-anchor" href="#warm-flow能给你带来什么"><span>warm-flow能给你带来什么</span></a></h2><blockquote><p>Warm-Flow国产工作流引擎🎉，其特点简洁轻量但又不简单，五脏俱全，组件独立，可扩展，可满足中小项目的组件。</p></blockquote><ol><li><p>简洁易用：只有7张表，代码量少，可快速上手和集成</p></li><li><p>审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关</p></li><li><p>监听器与流程变量：支持五种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限</p></li><li><p>流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用</p></li><li><p>条件表达式：内置常见的条件表达式，并且支持自定义扩展</p></li><li><p>orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便</p></li><li><p>数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库</p></li><li><p>多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式</p></li><li><p>支持角色、部门和用户等权限配置</p></li><li><p>同时支持spring和solon</p></li><li><p>兼容java8和java17,理论11也可以</p></li><li><p>官方提供基于ruoyi-vue封装实战项目，很实用</p></li></ol><h4 id="流程流转管理" tabindex="-1"><a class="header-anchor" href="#流程流转管理"><span>流程流转管理</span></a></h4><p>流程流转就像是warm-flow的驾驶人。让办理流程像喝水一样简单的事情。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 部署流程</span></span>
<span class="line"><span>public void deployFlow() throws Exception {</span></span>
<span class="line"><span>        defService.importXml(new FileInputStream(&quot;/xxx/leaveFlow-serial.xml&quot;));</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>// 发布流程</span></span>
<span class="line"><span>public void publish() {</span></span>
<span class="line"><span>        defService.publish(1219285650587652096L);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>// 开启流程</span></span>
<span class="line"><span>public void startFlow() {</span></span>
<span class="line"><span>        insService.start(&quot;2&quot;, getUser());</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>// 跳转流程</span></span>
<span class="line"><span>public void skipFlow() {</span></span>
<span class="line"><span>        Instance instance = insService.skip(1232001238795685888L,getUser().skipType(SkipType.PASS.getKey())</span></span>
<span class="line"><span>        .permissionFlag(Arrays.asList(&quot;role:1&quot;, &quot;role:2&quot;)));</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>//任意跳转</span></span>
<span class="line"><span>public void skipAnyNode() {</span></span>
<span class="line"><span>        Instance instance = taskService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey())</span></span>
<span class="line"><span>        .permissionFlag(Arrays.asList(&quot;role:1&quot;, &quot;role:2&quot;)).nodeCode(&quot;4&quot;));</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>// 终止流程</span></span>
<span class="line"><span>public void termination() {</span></span>
<span class="line"><span>        taskService.termination(1232001396254052352L, getUser());</span></span>
<span class="line"><span>        }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="流程图管理" tabindex="-1"><a class="header-anchor" href="#流程图管理"><span>流程图管理</span></a></h4><p>流程图管理就像warm-flow的门面。作为工作流引擎，当然是可以能脱离流程设计器，独立使用的，那流程图片生成是必不可少的。warm-flow自研了流程图绘制，通过设计器获取坐标，进行绘制流程的进度和状态（当然业务系统可以不集成设计器，可在作者提供的demo项目中设计好导出xml，业务系统再次导入即可）。</p><p><img src="`+a+'" alt=""></p><h2 id="演示地址" tabindex="-1"><a class="header-anchor" href="#演示地址"><span>演示地址</span></a></h2><ul><li>admin/admin123</li></ul><p>演示地址：http://www.hhzai.top</p><h2 id="官网" tabindex="-1"><a class="header-anchor" href="#官网"><span>官网</span></a></h2><p>http://warm-flow.cn</p><p>关于 Dromara</p><p>Dromara 是由国内顶尖的开源项目作者共同组成的开源社区。提供包括分布式事务，流行工具，企业级认证，微服务RPC，运维监控，Agent监控，分布式日志，调度编排等一系列开源产品、解决方案与咨询、技术支持与培训认证服务。技术栈全面开源共建、 保持社区中立，致力于为全球用户提供微服务云原生解决方案。让参与的每一位开源爱好者，体会到开源的快乐。</p><p>Dromara开源社区目前拥有10+GVP项目，总star数量超过十万，构建了上万人的开源社区，有成千上万的个人及团队在使用Dromara社区的开源项目。</p><p><strong>欢迎大家来到知识星球和我互动</strong></p><p><img src="'+n+'" alt=""></p>',24)]))}const h=s(t,[["render",r],["__file","warm-flow-1.2.4.html.vue"]]),u=JSON.parse('{"path":"/zh/news/warm-flow-1.2.4.html","title":"warm-flow 1.2.4版本更新, 国产工作流引擎","lang":"zh-CN","frontmatter":{"title":"warm-flow 1.2.4版本更新, 国产工作流引擎","author":"warm-flow","date":"2024-08-23T00:00:00.000Z","cover":"/assets/img/news/warm-flow-1.2.4-0.png","head":[["meta",{"name":"新闻"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuepress-theme-hope-docs-demo.netlify.app/news/warm-flow-1.2.4.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/zh/news/warm-flow-1.2.4.html"}],["meta",{"property":"og:title","content":"warm-flow 1.2.4版本更新, 国产工作流引擎"}],["meta",{"property":"og:description","content":"warm-flow 1.2.4版本更新 主要内容，具体详情和升级注意事项，请查看官网更新记录 [feat] 激活和挂起 [feat] 不同节点也支持配置审批表单路径 [feat] 支持接收外部流程状态，支持流程状态扩展 [feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式 [feat] 新增分派监听器，支持代办任务中办理人等动态修改..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/news/warm-flow-1.2.4-0.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-08-24T11:47:41.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/news/warm-flow-1.2.4-0.png"}],["meta",{"name":"twitter:image:alt","content":"warm-flow 1.2.4版本更新, 国产工作流引擎"}],["meta",{"property":"article:author","content":"warm-flow"}],["meta",{"property":"article:published_time","content":"2024-08-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-24T11:47:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"warm-flow 1.2.4版本更新, 国产工作流引擎\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/news/warm-flow-1.2.4-0.png\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/qrcode_zsxq.webp\\"],\\"datePublished\\":\\"2024-08-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-24T11:47:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"warm-flow\\"}]}"]],"description":"warm-flow 1.2.4版本更新 主要内容，具体详情和升级注意事项，请查看官网更新记录 [feat] 激活和挂起 [feat] 不同节点也支持配置审批表单路径 [feat] 支持接收外部流程状态，支持流程状态扩展 [feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式 [feat] 新增分派监听器，支持代办任务中办理人等动态修改..."},"headers":[{"level":2,"title":"warm-flow 1.2.4版本更新","slug":"warm-flow-1-2-4版本更新","link":"#warm-flow-1-2-4版本更新","children":[]},{"level":2,"title":"历史背景","slug":"历史背景","link":"#历史背景","children":[]},{"level":2,"title":"warm-flow能给你带来什么","slug":"warm-flow能给你带来什么","link":"#warm-flow能给你带来什么","children":[]},{"level":2,"title":"演示地址","slug":"演示地址","link":"#演示地址","children":[]},{"level":2,"title":"官网","slug":"官网","link":"#官网","children":[]}],"git":{"createdTime":1723912674000,"updatedTime":1724500061000,"contributors":[{"name":"itanxyu","username":"itanxyu","email":"itanxy@126.com","commits":3,"url":"https://github.com/itanxyu"}]},"readingTime":{"minutes":4.39,"words":1317},"filePathRelative":"zh/news/warm-flow-1.2.4.md","localizedDate":"2024年8月23日","autoDesc":true,"excerpt":"<h2>warm-flow 1.2.4版本更新</h2>\\n<ul>\\n<li>\\n<p>主要内容，具体详情和升级注意事项，请查看官网更新记录</p>\\n</li>\\n<li>\\n<p>[feat] 激活和挂起</p>\\n</li>\\n<li>\\n<p>[feat] 不同节点也支持配置审批表单路径</p>\\n</li>\\n<li>\\n<p>[feat] 支持接收外部流程状态，支持流程状态扩展</p>\\n</li>\\n<li>\\n<p>[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式</p>\\n</li>\\n<li>\\n<p>[feat] 新增分派监听器，支持代办任务中办理人等动态修改</p>\\n</li>\\n<li>\\n<p>[feat] 新增Easy-Query框架支持</p>\\n</li>\\n<li>\\n<p>[feat] 新增Mybatis-Flex的solon扩展包</p>\\n</li>\\n<li>\\n<p>[feat] 新增Jpa的solon扩展包</p>\\n</li>\\n<li>\\n<p>[feat] 历史表新增跳转类型，记录跳转类型</p>\\n</li>\\n<li>\\n<p>[feat] 增加组件加载，yml控制开关</p>\\n</li>\\n</ul>"}');export{h as comp,u as data};
